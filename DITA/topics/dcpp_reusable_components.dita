<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dcpp_reusable_components">
  <title>Reusable Components in DITA PDF-CSS Publishing</title>
  <body>
    <p>
      <table frame="all" rowsep="1" colsep="1" id="table_qzx_k32_scb">
        <title>Reusable components for the DITA PDF-CSS Publishing Plugin</title>
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="1*"/>
          <thead>
            <row>
              <entry>Description</entry>
              <entry>Content</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Disclaimer</entry>
              <entry>
                <p>
                  <note id="rc-css-fragment-disclaimer-note">This is listed solely for illustration
                    purposes, as the plugin might use something different.</note>
                </p>
              </entry>
            </row>
            <row>
              <entry>Chapter definition</entry>
              <entry>
                <note id="note_x1s_2f2_5cb">For a plain DITA map, the chapters are the
                    <xmlelement>topicref</xmlelement> elements that are placed on the first level.
                  For bookmaps, the chapters are the topics referenced by a
                    <xmlelement>chapter</xmlelement> element. </note>
              </entry>
            </row>
            <row>
              <entry>Do not edit styles from the installation directory</entry>
              <entry>
                <note type="caution" id="note_gxm_jyq_5cb">Do not modify the built-in rules directly
                  in the CSS files from the <b>Oxygen XML Editor/Author</b> installation. Instead,
                  copy the rules to your own customization CSS.</note>
              </entry>
            </row>
            <row>
              <entry>SVG recommendation.</entry>
              <entry>
                <note id="note_pqy_hdn_vcb">You can use raster image formats (such as PNG or JPEG),
                  but it is best to use vector images (such as SVG or PDF). They scale very well and
                  produce better results when printed. In addition, the text from these images is
                  searchable and can be selected (if the glyphs have not been converted to shapes)
                  in the PDF viewer.</note>
              </entry>
            </row>
            <row>
              <entry>Merged map processed to HTML5</entry>
              <entry>
                <p id="mmap_pqy_hdn_vca">For the <uicontrol keyref="pdf-html5-transformation"/>
                  transformation type, the merged map is further processed resulting in a collection
                  of HTML5 <xmlelement>div</xmlelement> elements. These elements preserve the
                  original DITA <xmlatt>class</xmlatt> attribute values and add a new value derived
                  from the DITA element name.</p>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </p>
    <ol id="ol_gjr_kq5_njb">
      <li id="pt-li1">
        <p>If you have not already created a Publishing Template, you need to create one. For
          details, see <xref href="../topics/whr-create-publishing-template.dita"
            product="author developer editor authorEclipse developerEclipse editorEclipse"/><xref
            href="https://www.oxygenxml.com/doc/ug-pdf-css/topics/whr-create-publishing-template.html"
            format="html" scope="external" product="pdf-css ope">How to Create a Publishing
            Template</xref>.</p>
      </li>
      <li id="pt-li2">Link the folder associated with the publishing template to your current
        project in the <uicontrol product="author developer editor pdf-css ope"
          >Project</uicontrol><uicontrol product="authorEclipse developerEclipse editorEclipse"
          >Navigator</uicontrol> view.</li>
      <li id="pt-li3">Using the <uicontrol product="author developer editor pdf-css"
          >Project</uicontrol><uicontrol product="authorEclipse developerEclipse editorEclipse"
          >Navigator</uicontrol> view, create an <filepath>xslt</filepath> folder inside the project
        root folder.</li>
      <li id="pt-li4">In this folder, create an XSL file (for example, named
          <filepath>merged2html5Extension.xsl</filepath>) with the following
        content:<codeblock outputclass="language-xml">  &lt;xsl:template match="*[contains(@class, ' topic/dl ')]">
    &lt;xsl:call-template name="setaname"/>
    &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-startprop ')]
" mode="out-of-line"/>
    &lt;table>
      &lt;xsl:call-template name="commonattributes"/>
      &lt;xsl:call-template name="setid"/>
      &lt;xsl:apply-templates/>
    &lt;/table>
    &lt;xsl:apply-templates select="*[contains(@class, ' ditaot-d/ditaval-endprop ')]
" mode="out-of-line"/>
  &lt;/xsl:template>
  
  &lt;xsl:template match="*[contains(@class, ' topic/dlentry ')]">
    &lt;tr>
      &lt;xsl:apply-templates/>
    &lt;/tr>
  &lt;/xsl:template>
  
  &lt;xsl:template match="*[contains(@class, ' topic/dd ')]">
    &lt;td>
      &lt;xsl:call-template name="commonattributes"/>
      &lt;xsl:call-template name="setidaname"/>
      &lt;xsl:apply-templates select="../*[contains(@class, ' ditaot-d/ditaval-startprop ')]
" mode="out-of-line"/>
      &lt;xsl:apply-templates/>
      &lt;xsl:apply-templates select="../*[contains(@class, ' ditaot-d/ditaval-endprop ')]
" mode="out-of-line"/>
    &lt;/td>
  &lt;/xsl:template>
  
  &lt;xsl:template match="*[contains(@class, ' topic/dt ')]">
    &lt;td>
      &lt;xsl:call-template name="commonattributes"/>
      &lt;xsl:call-template name="setidaname"/>        
      &lt;xsl:apply-templates select="../*[contains(@class, ' ditaot-d/ditaval-startprop ')]
" mode="out-of-line"/>
      &lt;xsl:apply-templates/>
      &lt;xsl:apply-templates select="../*[contains(@class, ' ditaot-d/ditaval-endprop ')]
" mode="out-of-line"/>
    &lt;/td>
  &lt;/xsl:template></codeblock></li>
      <li id="pt-li5">Open the <xref
          href="../topics/pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
            ><i>template descriptor file</i></xref> associated with your <i>publishing template</i>
        (the <i>.opt</i> file) and set the XSLT stylesheet created in the previous step with the
          <codeph>com.oxygenxml.pdf.css.xsl.merged2html5</codeph> XSLT extension
        point:<codeblock outputclass="language-xml">&lt;publishing-template&gt;
    ...
    &lt;pdf&gt;
        ...        
        &lt;xslt&gt;
            &lt;extension 
              id="com.oxygenxml.pdf.css.xsl.merged2html5"
              file="xslt/merged2html5Extension.xsl"/&gt;
        &lt;/xslt&gt;</codeblock></li>
      <li id="pt-li6"> Edit the <b><ph keyref="pdf-html5-transformation"/></b> transformation
        scenario. </li>
      <li id="pt-li7"> In the <uicontrol>Templates</uicontrol> tab, click the <uicontrol>Choose
          Custom Publishing Template</uicontrol> link and select your template. </li>
      <li id="pt-li8"> Click <uicontrol>OK</uicontrol> to save the changes to the transformation
        scenario. </li>
      <li id="pt-li9"> Run the transformation scenario. </li>
    </ol>
  </body>
</topic>
