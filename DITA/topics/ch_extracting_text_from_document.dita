<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_extracting_text_from_document">
  <title>Extracting Text from Document</title>
  <body>
    <p>To display the title of the publication or the title of the current chapter, you will need to
      extract some content from the document and use it in one or more page margin boxes. This is
      possible by using a <codeph>string-set</codeph>. It is similar to a variable that is
      initialized to a content each time a specific element is matched.</p>
    <p>In the following example, the text content of the <codeph>H1</codeph> element is extracted
      and used as a publication title and the <codeph>H2</codeph> element defines the chapter
      title:</p>
    <codeblock outputclass="language-css">h1 {
  string-set: publication_title content();
}

h2 {
  string-set: chapter_title content();
}</codeblock>
    <note type="important">To define multiple string sets for an element, please use <b>a single
          <codeph>string-set</codeph> property</b> with a list of comma separated
      definitions:<codeblock outputclass="language-css">h1 {
  string-set: <i>publication_title</i> content(),  <i>publication_author</i> attr(data-author);
}</codeblock></note>
    <p>The next example uses the collected strings in the top margins of the pages. It joins the
      publication title and the chapter title by a "/" character, then places them in the outer side
      of the pages (to the left for the left side pages, to the right for the right side pages).</p>
    <codeblock outputclass="language-css">@page :left {
  @top-left { 
    content : string(publication_title) " / " string(chapter_title);
  }
}

@page :right {
  @top-right {
    content: string(publication_title) " / " string(chapter_title);
  }
}</codeblock>
    <p>A string set may contain static text, content from the document, attributes from the element,
      or counters. This is a more complex example, where a chapter number is added to the
        <codeph>chapter_title</codeph> string set:</p>
    <codeblock outputclass="language-css">h1 {
  counter-reset: chapter;
}

h2 {
  string-set: chapter_title "Chapter (" counter(chapter) ")" content();
  counter-increment: chapter;
}</codeblock>
    <p>You could also use the <codeph>oxy_xpath</codeph> function to extract or compute some text
      from a document. You can use a combination of <codeph>string-set</codeph> and
        <codeph>oxy_xpath</codeph> to define a kind of variable that is used across publication
      headers.</p>
    <p>Suppose your document defines a creation date in a metadata section. This section may be
      anywhere in your document.</p>
    <p>To use it in the header of your first page, you can extract the value, assign it to a
      string-set, then reference it from the page margin box from the header:<ol>
        <li>Extract the value and set it to a string-set that is associated to the root element so
          that it will be available on all
          pages:<codeblock outputclass="language-css">:root {
   string-set: creationdate oxy_xpath("//bookmeta//created/@date[1]"); 
}</codeblock></li>
        <li>Use it in the
          header:<codeblock outputclass="language-css">@page {
   @top-center {
        content: "Created: " string(creationdate);
   }
}</codeblock></li>
      </ol></p>
  </body>
</topic>
