<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="dg-namespace-selectors">
  <title>Namespace Selector</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS namespace selector</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_pcc_dgk_54b">In the CSS 2.1 standard, the element selectors ignore the namespaces of the elements they are
      matching. Only the local name of the elements are considered in the selector matching
      process.</p>
    <p id="p_qcc_dgk_54b"><ph keyref="product"/> uses a different approach that is similar to the CSS Level 3
      specification. If the element name from the CSS selector is not preceded by a namespace prefix
      it is considered to match an element with the same local name as the selector value and ANY
      namespace. Otherwise, the element must match both the local name and the namespace.</p>
    <p id="p_rcc_dgk_54b">In CSS up to version 2.1, the name tokens from selectors match all elements from ANY
      namespace that have the same local name. Example:</p>
    <codeblock outputclass="language-xml" id="codeblock_scc_dgk_54b">&lt;x:b xmlns:x="ns_x"/&gt;
&lt;y:b xmlns:y="ns_y"/&gt;</codeblock>
    <p id="p_tcc_dgk_54b">Are both matched by the rule:</p>
    <codeblock outputclass="language-css" id="codeblock_ucc_dgk_54b">b {font-weight:bold}</codeblock>
    <p id="p_vcc_dgk_54b">Starting with CSS Level 3, you can create selectors that are namespace aware.</p>
    <p id="p_wcc_dgk_54b"><b><u>Example: Defining prefixed and default namespaces</u></b></p>
    <p id="p_xcc_dgk_54b">Given the namespace
      declarations:<codeblock outputclass="language-css" id="codeblock_ycc_dgk_54b">@namespace sync "http://sync.example.org";
@namespace "http://example.com/foo";</codeblock></p>
    <p id="p_zcc_dgk_54b">Then:</p>
    <p id="p_adc_dgk_54b">
      <dl id="dl_bdc_dgk_54b">
        <dlentry id="dlentry_cdc_dgk_54b">
          <dt>sync|A</dt>
          <dd>
            <p id="p_ddc_dgk_54b">Represents the name A in the <codeph>http://sync.example.org</codeph> namespace.</p>
          </dd>
        </dlentry>
        <dlentry id="dlentry_edc_dgk_54b">
          <dt>*|B</dt>
          <dd>
            <p id="p_fdc_dgk_54b">Represents the name B in ANY namespace, including NO NAMESPACE.</p>
          </dd>
        </dlentry>
        <dlentry id="dlentry_gdc_dgk_54b">
          <dt>C</dt>
          <dd>
            <p id="p_hdc_dgk_54b">Represents the name C in ANY namespace, including NO NAMESPACE.</p>
          </dd>
        </dlentry>
      </dl>
    </p>
    <p id="p_idc_dgk_54b"><b><u>Example: Defining prefixed namespaces combined with pseudo-elements</u></b></p>
    <p id="p_jdc_dgk_54b">To match the <xmlelement>def</xmlelement> element its namespace declares, bind it to the <i>abs</i>
      prefix and then write a CSS
      rule:<codeblock outputclass="language-css" id="codeblock_kdc_dgk_54b">@namespace abs "http://www.oxygenxml.com/sample/documentation/abstracts";</codeblock></p>
    <p id="p_ldc_dgk_54b">Then:</p>
    <p id="p_mdc_dgk_54b">
      <dl id="dl_ndc_dgk_54b">
        <dlentry id="dlentry_odc_dgk_54b">
          <dt>abs|def</dt>
          <dd>
            <p id="p_pdc_dgk_54b">Represents the name "def" in the
                <codeph>http://www.oxygenxml.com/sample/documentation/abstracts</codeph>
              namespace.</p>
          </dd>
        </dlentry>
        <dlentry id="dlentry_qdc_dgk_54b">
          <dt>abs|def:before</dt>
          <dd>
            <p id="p_rdc_dgk_54b">Represents the :before pseudo-element of the "def" element from the
                <codeph>http://www.oxygenxml.com/sample/documentation/abstracts</codeph> namespace.
            </p>
          </dd>
        </dlentry>
      </dl>
    </p>
  </body>
</topic>
