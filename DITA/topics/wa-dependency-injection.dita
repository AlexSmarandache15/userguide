<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="wa-dependency-injection">
  <title>Dependency Injection for Plugins</title>
  <body>
    <p id="p_dys_dgk_54b">If you want to share a single instance of a certain class between plugin
      extensions and custom operations (to prevent instances from being repeated), you can declare a
        <xmlelement>context</xmlelement> element in your <filepath>plugin.xml</filepath>
      file:<codeblock outputclass="language-xml">&lt;context class="my.package.ContextClass"/></codeblock></p>
    <note id="note_fcj_z3s_4qb" type="important">The <codeph>my.package.ContextClass</codeph> class
      should have a no-arguments constructor that will be called when the class is
      instantiated.</note>
    <p id="p_mzc_f3s_4qb">This will result in an instance being automatically generated. You can
      access this instance in an extension class by defining a field of that type and annotated with
      the <codeph>ro.sync.exml.plugin.PluginContext</codeph>
      annotation:<codeblock outputclass="language-java">@PluginContext
ContextClass contextInstance;</codeblock></p>
    <p id="p_gvj_r3s_4qb">The defined field is automatically populated with the single instance.</p>
  </body>
</topic>
