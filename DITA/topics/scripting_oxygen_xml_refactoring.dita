<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="scripting_oxygen_xml_refactoring">
  <title>XML Refactoring</title>
  <body>
    <note type="attention">
      <ul id="ul_xnq_q2r_jnb">
        <li> To run this script, you are required to purchase a special <xref
            href="https://www.oxygenxml.com/oxygen_scripting.html" format="html" scope="external"
            >scripting commercial license</xref>.</li>
        <li>To execute an XQuery refactoring operation using this script, in additional to the <xref
            href="https://www.oxygenxml.com/buy_saxon.html" format="html" scope="external">scripting
            commercial license</xref>, you are required to purchase a <xref
            href="https://www.oxygenxml.com/xml_webhelp.html" format="html" scope="external">Saxon
            EE license</xref>.</li>
      </ul>
    </note>
    <p>The <uicontrol>XML Refactoring</uicontrol> script can be used to execute <xref
        href="refactoring-xml-documents.dita">XML refactoring operations</xref>. You can run the
      refactoring operations for <ph keyref="product"/> without setting their location, but if you
      want to run custom refactoring operations, you have to specify the directory that contains
      them, using the <i>operationsDirectory</i> argument.</p>
    <section id="section_gbd_tzb_vmb">
      <title>Arguments for the XML Refactoring Script</title>
      <p>
        <codeblock outputclass="language-bourne">sh scripts/xmlRefactoring.sh  -id operationId -i inputFilesOrDirectories [-f filesFilter] 
[-od operationsDirectory] [-p param1=value1...] [-v]</codeblock>
      </p>
      <p>
        <dl>
          <dlentry>
            <dt>-id operationId</dt>
            <dd>The ID of the refactoring operation to be executed.</dd>
          </dlentry>
          <dlentry>
            <dt>-i inputFilesOrDirectories</dt>
            <dd>A list of space-separated input files or directories that the refactoring operation
              is applied to.</dd>
          </dlentry>
          <dlentry>
            <dt>-f filesFilter</dt>
            <dd>Specifies a filter for the input files by using a file pattern. For example, to
              restrict the operation to only analyze build files, you could use
                <userinput>build*.xml</userinput> for the file pattern.</dd>
          </dlentry>
          <dlentry>
            <dt>-od operationsDirectory</dt>
            <dd>
              <p>A directory that contains additional refactoring operations.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>-p param1=value1...</dt>
            <dd>A list of space-separated pairs of a parameter's name and value used by the
              refactoring operation.</dd>
          </dlentry>
          <dlentry>
            <dt>-v</dt>
            <dd>This argument can be specified to activate verbose logging.</dd>
          </dlentry>
        </dl>
      </p>
    </section>
  </body>
</topic>
