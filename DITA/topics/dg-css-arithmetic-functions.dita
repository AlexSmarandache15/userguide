<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="dg-css-arithmetic-functions">
  <title>Arithmetic Functions</title>
  <shortdesc>Arithmetic Functions that are supported.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS extensions<indexterm>Custom
            functions<indexterm>oxy_add</indexterm></indexterm></indexterm>
        <indexterm>CSS extensions<indexterm>Custom
            functions<indexterm>oxy_subtract</indexterm></indexterm></indexterm>
        <indexterm>CSS extensions<indexterm>Custom
            functions<indexterm>oxy_multiply</indexterm></indexterm></indexterm>
        <indexterm>CSS extensions<indexterm>Custom
            functions<indexterm>oxy_divide</indexterm></indexterm></indexterm>
        <indexterm>CSS extensions<indexterm>Custom
            functions<indexterm>oxy_modulo</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>You can use any of the arithmetic functions implemented in the
        <codeph>java.lang.Math</codeph> class (<xref
        href="http://download.oracle.com/javase/6/docs/api/java/lang/Math.html" format="html"
        scope="external"/>).</p>
    <p>In addition, the following functions are available:<table frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*" colsep="1" rowsep="1"/>
          <colspec colname="c2" colnum="2" colwidth="1.22*" colsep="1" rowsep="1"/>
          <thead>
            <row>
              <entry>Syntax</entry>
              <entry>Details</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><b>oxy_add (<codeph>param1</codeph>, ... , <codeph>paramN</codeph>,
                    <codeph>'returnType'</codeph>)</b></entry>
              <entry>Adds the values of all parameters from <codeph>param1</codeph> to
                  <codeph>paramN</codeph>.</entry>
            </row>
            <row>
              <entry><b>oxy_subtract (<codeph>param1</codeph>, <codeph>param2</codeph>, ... ,
                    <codeph>paramN</codeph>, <codeph>'returnType'</codeph>) </b></entry>
              <entry>Subtracts the values of parameters <codeph>param2</codeph> to
                  <codeph>paramN</codeph> from <codeph>param1</codeph>.</entry>
            </row>
            <row>
              <entry><b>oxy_multiply (<codeph>param1</codeph>, ... , <codeph>paramN</codeph>,
                    <codeph>'returnType'</codeph>)</b></entry>
              <entry>Multiplies the values of parameters from <codeph>param1</codeph> to
                  <codeph>paramN</codeph>.</entry>
            </row>
            <row>
              <entry><b>oxy_divide (<codeph>param1</codeph>, <codeph>param2</codeph>,
                    <codeph>'returnType'</codeph>)</b></entry>
              <entry>Performs the division of <codeph>param1</codeph> to
                <codeph>param2</codeph>.</entry>
            </row>
            <row>
              <entry><b>oxy_modulo (<codeph>param1</codeph>, <codeph>param2</codeph>,
                    <codeph>'returnType'</codeph>)</b></entry>
              <entry>Returns the reminder of the division of <codeph>param1</codeph> to
                  <codeph>param2</codeph>.</entry>
            </row>
          </tbody>
        </tgroup>
      </table><note>The <codeph>returnType</codeph> can be <codeph>'integer'</codeph>,
          <codeph>'number'</codeph>, or any of the supported CSS measuring types.</note></p>
    <p><b><u>Example: <i>oxy_multiply</i> Function</u></b></p>
    <p>If you have an image with <b>width</b> and <b>height</b> specified on it, this will compute
      the number of pixels on
      it:<codeblock outputclass="language-css">image:before{
 content: "Number of pixels: " oxy_multiply(attr(width), attr(height), "px");
}</codeblock></p>
  </conbody>
</concept>