<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="whr-override-xslt-dita-xslt-import-sample">
  <title>Example: Customizing the WebHelp Side TOC Using a WebHelp XSLT-Import Extension
    Point</title>
  <body>
    
      <p>To demonstrate the usage of WebHelp XSLT-Import extension points, we'll try to change how
      the topics are displayed in the side table of contents. The default transformation generates a
      mini table of contents for the current topic and it contains links to the children of current
      topic, its siblings, and all of its ancestors.</p>
    <section id="section_edl_ycb_3z">
      <title><b>Use Case 1: How to Use a WebHelp XSLT-Import extension point to Customize the Side
          TOC</b></title>
      <p>Suppose you want to customize the side TOC to only include the current topic and its child
        topics (while excluding its siblings and ancestors).</p>
      <p>
        <fig id="fig_f5m_bdb_3z">
          <title>Example: Filtered Side Table of Contents</title>
          <image href="../img/WH-XSLT-customization.png" id="image_h4x_prg_dx"/>
        </fig>
      </p>
      <p>The default XSLT template responsible for this functionality is defined in: <filepath><term
            keyref="glossentry_dita_ot_dir"
          />\plugins\com.oxygenxml.webhelp\xsl\dita\responsive\navigationLinks.xsl</filepath>.<codeblock outputclass="language-xml">&lt;xsl:template
          match="
          toc:topic
          [not(@toc = 'no')]
          [not(@processing-role = 'resource-only')]"
          mode="toc-pull" priority="10"></codeblock></p>
      <p>This template computes the link for the current topic along with the links for the sibling
        topics, and then propagates them recursively to the parent topic. For the specific use-case
        described above, you need to override this template so that it will produce the link for the
        current topic along with just the child links that the template already receives.</p>
      <p>Next we'll see how to implement this functionality with a WebHelp extension plugin that
        uses the <xref
          href="whr-override-xslt-processing.dita#whr-override-xslt-processing/xsl-dita2webhelp"
            ><b>com.oxygenxml.webhelp.xsl.dita2webhelp</b> extension point</xref>. This extension
        point allows you to specify a customization stylesheet that will override the template
        described above.</p>
      <p>To add this functionality as a DITA-OT plugin, follow these steps:<ol id="ol_at4_wk1_dx">
          <li>In the <filepath><term keyref="glossentry_dita_ot_dir"/>\plugins\</filepath> folder,
            create a folder for this plugin (for example,
              <filepath>com.oxygenxml.webhelp.custom.sidetoc</filepath>).</li>
          <li>Create a <b>plugin.xml</b> file (in the folder you created in step 1) that specifies
            the extension point and your customization stylesheet. For
            example:<codeblock outputclass="language-xml">&lt;plugin id="com.oxygenxml.webhelp.custom.sidetoc">
  &lt;feature extension="com.oxygenxml.webhelp.xsl.dita2webhelp"
              file="custom_side_TOC.xsl"/>    
&lt;/plugin></codeblock></li>
          <li>Create your customization stylesheet (for example, <b>custom_side_TOC.xsl</b>), and
            edit it to override the template that produces the side
            TOC:<codeblock outputclass="language-xml">&lt;xsl:template
              match="
              toc:topic
              [not(@toc = 'no')]
              [not(@processing-role = 'resource-only')]"
              mode="toc-pull" 
              priority="10">
              
              &lt;xsl:param name="pathFromMaplist" as="xs:string"/>
              &lt;xsl:param name="children" select="()" as="element()*"/>
              &lt;xsl:param name="parent" select="parent::*" as="element()?"/>
              
              &lt;xsl:apply-templates select="." mode="sideTocEntry">
              &lt;xsl:with-param name="pathFromMaplist" select="$pathFromMaplist"/>
              &lt;xsl:with-param name="children" select="$children"/>
              &lt;/xsl:apply-templates>
&lt;/xsl:template></codeblock></li>
          <li>Run the <uicontrol>Run DITA OT Integrator</uicontrol> transformation scenario.</li>
          <li>Run a <uicontrol>DITA Map WebHelp Responsive</uicontrol> transformation scenario to
            obtain the customized side TOC.</li>
        </ol></p>
    </section>
      
    
    <section id="section_hp1_phg_dx">
      <title>Use-Case 2: Control the Side TOC generation with a WebHelp transformation
        parameter</title>
      <p>Another use-case might be to control what is displayed in the side table of contents, to
        add a transformation parameter that will enable or not the XSLT customization described
        above. For this use-case, you can use the <xref
          href="whr-override-xslt-processing.dita#whr-override-xslt-processing/param-ext-point"
            ><b>com.oxygenxml.webhelp.xsl.dita2webhelp.param</b> extension point</xref>. </p>
      <p>To add this functionality, follow these steps:<ol>
          <li>Create a DITA-OT plugin structure by following the first 3 steps in the <xref
              href="#whr-xslt-customization/how-to-customize-side-toc" format="dita">procedure
              above</xref>. </li>
          <li>In the customization stylesheet that you created in step 3, declare the
              <codeph>side_toc_only_children</codeph> parameter and modify the template to match the
            topic only when the <codeph>side_toc_only_children</codeph> parameter is set to
              <i>yes</i>:<codeblock outputclass="language-xml">&lt;xsl:param name="side_toc_only_children" select="'yes'"/>
              ...
              &lt;xsl:template
              match="
              toc:topic
              [not(@toc = 'no')]
              [not(@processing-role = 'resource-only')]
              [$side_toc_only_children = 'yes']"
              ...</codeblock></li>
          <li>Edit the <b>plugin.xml</b> file to specify the
              <b>com.oxygenxml.webhelp.xsl.dita2webhelp.param</b> extension point and a custom
            parameter file by adding the following
            line:<codeblock outputclass="language-xml">&lt;feature extension="com.oxygenxml.webhelp.xsl.dita2webhelp.param" 
              file="custom_params.xml"/></codeblock></li>
          <li>Create a custom parameter file (for example, <b>custom_params.xml</b>). It should look
            like
            this:<codeblock outputclass="language-xml">&lt;dummy>
              &lt;param name="side_toc_only_children" expression="${side_toc_only_children}"
              if="side_toc_only_children"/>
&lt;/dummy></codeblock></li>
          <li>Run the <uicontrol>Run DITA OT Integrator</uicontrol> transformation scenario.</li>
          <li>Edit a <uicontrol>DITA Map WebHelp Responsive</uicontrol> transformation scenario and
            in the <uicontrol>Parameters</uicontrol> tab, specify the desired value (<i>yes</i> or
              <i>no</i>) for your custom parameter (<codeph>side_toc_only_children</codeph>).</li>
          <li>Run the transformation scenario.</li>
        </ol></p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link format="html"
        href="http://www.dita-ot.org/dev/extension-points/plugin-extension-points-xslt-import.html"
        scope="external">
        <linktext>[DITA-OT] XSLT-Import Extension Points</linktext>
      </link>
      <link format="html"
        href="http://www.dita-ot.org/dev/extension-points/plugin-extension-points-xslt-parameters.html"
        scope="external">
        <linktext>[DITA-OT] XSLT-Parameter Extension Points</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
