<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_fonts_using_local_font_files">
  <title>Using Local Font Files</title>
  <body>
    <section id="section_ppg_trt_cbb">
      <title>Font Files Next to the CSS </title>
      <p id="p_r4v_dgk_54b">If the font file is not installed in the system, you can place it next
        to your custom CSS file. You will have to declare one or more <codeph>@font-face</codeph>
        structures, with the same <codeph>font-family</codeph>, but with possible different
          <codeph>font-weight</codeph> and <codeph>font-style</codeph> properties (as in the example
        below where the <codeph>TitilliumWeb</codeph> font is a bundle of multiple TTF files, each
        one for a specific font-weight and style). The TTF files were placed in a folder next to the
        CSS named <filepath>fonts/titillium</filepath>.</p>
      <codeblock outputclass="language-css" id="codeblock_s4v_dgk_54b">@font-face {
  font-family: titillium;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/titillium/TitilliumWeb-Regular.ttf) ;
}
@font-face {
  font-family: titillium;
  font-style: normal;
  font-weight: 300;
  src: url(fonts/titillium/TitilliumWeb-Light.ttf) ;
}
@font-face {
  font-family: titillium;
  font-style: normal;
  font-weight: 200;
  src: url(fonts/titillium/TitilliumWeb-ExtraLight.ttf) ;
}
@font-face {
  font-family: titillium;
  font-style: normal;
  font-weight: 600;
  src: url(fonts/titillium/TitilliumWeb-SemiBold.ttf) ;
}

section h2 {
    font-family: titillium, Serif;
}</codeblock>
    </section>
    <section id="section_ycd_yrt_cbb">
      <title>Font Files from a Directory</title>
      <p id="p_p4v_dgk_54b">If you have your font files located in a particular directory, you can
        instruct <ph keyref="product"/> to load them. To do this, use the
          <codeph>-fonts-dir</codeph> command-line argument and just specify the name of the font
        directly in the <codeph>font-family</codeph> property, as you would for the built-in fonts.
        Using this approach there is no need to define a <codeph>@font-face</codeph> structure in
        the CSS.<note id="note_zqv_jyd_rpb" type="tip">Using <codeph>@font-face</codeph>
          declarations in your CSS and keeping the font files next to the CSS is the recommended way
          to customize your output. In this way you can create a self-contained customization, with
          no need to deploy fonts in other directories.</note></p>
    </section>
    <section id="font_files_from_the_installation">
      <title>Font Files from the <ph keyref="product"/> Installation</title>
      <p id="p_q4v_dgk_54b">Another way is to copy your font files in the following subfolder:
          <filepath>[CHEMISTRY_INSTALL_DIR]/config/fonts</filepath>. Again, there is no need to
        define a <codeph>@font-face</codeph> structure in the CSS, just specify the name of the font
        directly in the <codeph>font-family</codeph> property.<note id="note_hmj_yxd_rpb">When using
          the <b>Oxygen Publishing Engine</b>, the Chemistry processor is installed in the
            <filepath>[OPE_INSTALL_DIR]/plugins/com.oxygenxml.pdf.css/lib/oxygen-pdf-chemistry</filepath>
          folder. You will need to add the fonts in the <filepath>config/fonts</filepath>
          sub-folder. However, the best approach is to use <codeph>@font-face</codeph> definitions
          in your CSS , avoid altering the Chemistry installation.</note></p>
    </section>
    <p id="p_t4v_dgk_54b"> In more simple cases, you might create a single <codeph>@font-face</codeph> structure.</p>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="ch_command_line_interface.dita"/>
    </linklist>
  </related-links>
</topic>
