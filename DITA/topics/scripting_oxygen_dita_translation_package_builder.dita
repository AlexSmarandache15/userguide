<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="section_yl2_qsb_vmb">
<title>DITA Translation Package Builder</title>
<body>
      
      <p>The <uicontrol>DITA Translation Package Builder</uicontrol> script helps you build a
      translation package for DITA files that can be sent to translators. You can also extract the
      changed files back into your project once you receive the package back from the
      translators.</p>
      <p>This script requires the <uicontrol>DITA Translation Package Builder</uicontrol> to be
        installed in <xref href="https://www.oxygenxml.com/xml_editor/download_oxygenxml_editor.html?os=Other" format="html" scope="external">all platforms distribution</xref>. To install it the
        add-on, follow these instructions:<ol id="ol_nn2_2vb_vmb">
          <li>Go on the <uicontrol>DITA Translation Package Builder</uicontrol> plugin
              <uicontrol>Releases</uicontrol> page and download the latest <xref href="https://github.com/oxygenxml/oxygen-dita-translation-package-builder/releases/latest" format="html" scope="external">translation-package-builder-{version}-plugin.jar</xref>
            package.</li>
          <li>Unzip it inside <filepath>{oxygenInstallDir}/plugins</filepath><note>Do not create any
              intermediate folders. Afterwards, the file system should look like this:
                <filepath>{oxygenInstallDir}/plugins/translation-package-builder-{version}/plugin.xml</filepath></note></li>
        </ol></p>
    <section id="section_gbd_tzb_vmb">
      <title>Examples</title>
    </section>
    <example>
      <title>Generating a milestone file</title>
      <codeblock outputclass="language-ini">sh scripts\translationPackageBuilder.sh -gm -i ditamapFile [-m milestoneFile] [-verbose]</codeblock>
      <p>
        <dl>
          <dlentry>
            <dt>-gm</dt>
            <dd>requests the generation of a milestone file.</dd>
          </dlentry>
          <dlentry>
            <dt>-i ditamapFile</dt>
            <dd>the main DITA map file</dd>
          </dlentry>
          <dlentry>
            <dt>-m milestoneFile</dt>
            <dd>the path to the milestone file. If missing, will assume the milestone is located in
              the DITA map parent folder and has a name like this:
                <filepath>{ditamapName}_translation_milestone.xml</filepath>.</dd>
          </dlentry>
          <dlentry>
            <dt>-verbose</dt>
            <dd>generate console log about the performed steps. Useful to debug.</dd>
          </dlentry>
        </dl>
      </p>
    </example>
    <example>
      <title>Creating a package with the modified files to send to translation</title>
      <codeblock outputclass="language-ini">sh scripts\translationPackageBuilder.sh  -gp -i ditamapFile [-m milestoneFile] -p package.zip [-verbose]</codeblock>
      <p>
        <dl>
          <dlentry>
            <dt>-gp</dt>
            <dd>request the generation of a package with the modified files</dd>
          </dlentry>
          <dlentry>
            <dt>-i ditamapFile</dt>
            <dd>the main DITA map file</dd>
          </dlentry>
          <dlentry>
            <dt>-m milestoneFile</dt>
            <dd>the path to the milestone file. If missing, will assume the milestone is located in
              the DITA map parent folder and has a name like this:
                <filepath>{ditamapName}_translation_milestone.xml</filepath>.</dd>
          </dlentry>
          <dlentry>
            <dt>-verbose</dt>
            <dd>generate console log about the performed steps. Useful to debug.</dd>
          </dlentry>
        </dl>
      </p>
    </example>
    <example>
      <title>Applying a translation package over a DITA map</title>
      <codeblock outputclass="language-ini">sh scripts\translationPackageBuilder.sh -ap -i ditamapFile -p package.zip [-verbose]</codeblock>
      <p>
        <dl>
          <dlentry>
            <dt>-ap</dt>
            <dd>request to apply a translation package over a dita map.</dd>
          </dlentry>
          <dlentry>
            <dt>-i ditamapFile</dt>
            <dd>the main DITA map file matching the received package language. For example, if the
              package contains topics translated into French then this map is the French version of
              you DITA map.</dd>
          </dlentry>
          <dlentry>
            <dt>-verbose</dt>
            <dd>generate console log about the performed steps. Useful to debug.</dd>
          </dlentry>
        </dl>
      </p>
    </example>
    </body>
</topic>
