<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="wa-force-track-changes">
  <title>Control Change Tracking State</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Control change tracking state</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_d1t_dgk_54b">You can control whether or not the <term>Change Tracking</term> feature is enabled when a
      documented is opened in <ph keyref="webappProduct"/> by using a <b>trackChanges</b> flag set
      in a <xref href="customizing_plugins.dita#customizing_plugins">plugin</xref>.</p>
    <p id="p_e1t_dgk_54b">Possible values for the <b>trackChanges</b> flag:<ul
        conkeyref="reusables-webauthor-customization/ul_bn3_jcf_11b" id="ul_y24_sy2_mqb">
        <li id="li_z24_sy2_mqb"/>
      </ul></p>
    <p id="p_j1t_dgk_54b">You can set this flag in your plugin's JavaScript code like
      this:<codeblock outputclass="language-javascript" id="codeblock_k1t_dgk_54b">goog.events.listen(workspace, 
sync.api.Workspace.EventType.BEFORE_EDITOR_LOADED, function(e) {
    if(forced_track_changes_condition) {
      e.options.trackChanges = 'forced';
    } else if(track_changes_enabled_condition) {
      e.options.trackChanges = 'enabled';
    } else if(track_changes_default_condition) {
      e.options.trackChanges = 'enabled';
    }
  }); </codeblock></p>
    <note type="tip" id="note_l1t_dgk_54b">You can also use this flag in an <xref
        href="webauthor-integrate-embedded-launch.dita#webauthor-integrate-embedded-launch">embedded
        link that launches Web Author</xref> so that when a user clicks the constructed link, the
      documented will be opened in Web Author with the <term>Change Tracking</term> feature
      enabled.</note>
    <section id="section_j5h_53d_4kb">
      <title>Changing the Change Tracking State Programmatically</title>
      <p id="p_m1t_dgk_54b">To change the state of the change tracking feature after the document is loaded, you need
        to include code in your plugin's JavaScript code, similar to
        this:<codeblock outputclass="language-javascript" id="codeblock_n1t_dgk_54b">// Assuming you have an 'editor' variable of type sync.api.Editor
var editingSupport = editor.getEditingSupport();
if (editingSupport.getType() === sync.api.Editor.EditorTypes.AUTHOR) {
  var manager = editingSupport.getChangeTrackingManager();
  if (!manager.isTrackingChanges()) {
    var am = editingSupport.getActionsManager();
    am.getActionById("Author/TrackChanges").actionPerformed(function(){
      am.refreshActionsStatus("Author/TrackChanges");
    });
  }
}</codeblock></p>
    </section>
  </body>
</topic>
