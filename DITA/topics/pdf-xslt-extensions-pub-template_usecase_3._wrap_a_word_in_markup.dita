<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-pub-template_usecase_3._wrap_a_word_in_markup">
	<title>How to Wrap Words in Markup</title>
	<body>
		<p>Suppose you want compound words that contain hyphens (or any other criteria) to be wrapped with
      inline elements (such as the HTML <xmlelement>code</xmlelement> element).</p>
		<p>To add this functionality using an <i>Oxygen Publishing Template</i>, follow these steps:<ol
				id="ol_gjr_kq5_njb">
        <li>If you have not already created a Publishing Template, you need to create one. For
          details, see <xref href="whr-create-publishing-template.dita"
            product="author developer editor authorEclipse developerEclipse editorEclipse"/><xref
            href="https://www.oxygenxml.com/doc/ug-pdf-css/topics/whr-create-publishing-template.html"
            format="html" scope="external" product="pdf-css">How to Create a Publishing
            Template</xref>.</li>
				<li>Link the folder associated with the publishing template to your current project in the
            <uicontrol product="author developer editor pdf-css">Project</uicontrol><uicontrol
            product="authorEclipse developerEclipse editorEclipse">Navigator</uicontrol> view.</li>
				<li>Using the <uicontrol product="author developer editor pdf-css">Project</uicontrol><uicontrol
            product="authorEclipse developerEclipse editorEclipse">Navigator</uicontrol> view,
          create an <filepath>xslt</filepath> folder inside the project root folder.</li>
				<li>In this folder, create an XSL file (for example, named
            <filepath>merged2htmlExtension.xsl</filepath>) with the following
          content:<codeblock outputclass="language-xml">  &lt;xsl:template match="text()">

    &lt;xsl:variable name="txt">
      &lt;xsl:next-match />
    &lt;/xsl:variable>

    &lt;xsl:analyze-string regex="(\w|\-)+" select="$txt">
      &lt;xsl:matching-substring>
        &lt;!-- A word -->
        &lt;xsl:choose>
          &lt;xsl:when test="contains(.,'-')">          
            &lt;!-- A compound word -->
            &lt;code class='compound-word'>&lt;xsl:value-of  select="."/>&lt;/code>
          &lt;/xsl:when>
          &lt;xsl:otherwise>
            &lt;!-- A simple word -->
            &lt;xsl:value-of select="." />
          &lt;/xsl:otherwise>
        &lt;/xsl:choose>
      &lt;/xsl:matching-substring>
      &lt;xsl:non-matching-substring>
        &lt;!-- Not a word -->      
        &lt;xsl:value-of select="." />
      &lt;/xsl:non-matching-substring>
    &lt;/xsl:analyze-string>

  &lt;/xsl:template></codeblock></li>
				<li>Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
              ><i>template descriptor file</i></xref> associated with your <i>publishing
            template</i> (the <i>.opt</i> file) and set the XSLT stylesheet created in previous step
          with the <codeph>com.oxygenxml.pdf.css.xsl.merged2merged</codeph> XSLT extension
          point:<codeblock outputclass="language-xml">&lt;publishing-template&gt;
    ...
    &lt;pdf&gt;
        ...        
        &lt;xslt&gt;
            &lt;extension 
              id="com.oxygenxml.pdf.css.xsl.merged2merged"
              file="xslt/merged2mergedExtension.xsl"/&gt;
        &lt;/xslt&gt;</codeblock></li>
				<li> Edit the <b>DITA Map PDF - based on HTML5 &amp; CSS</b> transformation scenario. </li>
				<li> In the <uicontrol>Templates</uicontrol> tab, click the <uicontrol>Choose Custom
						Publishing Template</uicontrol> link and select your template. </li>
				<li> Click <uicontrol>OK</uicontrol> to save the changes to the transformation scenario. </li>
				<li> Run the transformation scenario. </li>
			</ol>
		</p>
	</body>
</topic>
