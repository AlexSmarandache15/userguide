<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-pub-template_usecase_3._wrap_a_word_in_markup">
	<title>How to Wrap Words in Markup</title>
	<body>
		<p>Suppose you want the compound words containing dashes (or any other criteria) to be wrapped
			in inline elements, like the HTML <xmlelement>code</xmlelement>.</p>
		<p>To add this functionality using an <i>Oxygen Publishing Template</i>, follow these steps:<ol
				id="ol_gjr_kq5_njb">
				<li>If you haven't already created a Publishing Template, see <xref
						href="whr-create-publishing-template.dita"
						product="author developer editor authorEclipse developerEclipse editorEclipse"/>
					<xref
						href="https://www.oxygenxml.com/doc/ug-pdf-css/topics/whr-create-publishing-template.html"
						format="html" scope="external" product="pdf-css">How to Create a Publishing
						Template</xref>.</li>
				<li>Link the folder associated with the publishing template to your current project in the
						<uicontrol product="author developer editor webhelp-responsive">Project</uicontrol>
					<uicontrol product="authorEclipse developerEclipse editorEclipse">Navigator</uicontrol>
					view.</li>
				<li>Using the <uicontrol product="author developer editor webhelp-responsive"
						>Project</uicontrol>
					<uicontrol product="authorEclipse developerEclipse editorEclipse">Navigator</uicontrol>
					view, create an <filepath>xslt</filepath> folder inside the project root folder.</li>
				<li>In this folder, create an XSL file (for example, named
						<filepath>merged2htmlExtension.xsl</filepath>) with the following
					content:<codeblock outputclass="language-xml">
  &amp;lt;xsl:template match="text()"&gt;

    &amp;lt;xsl:variable name="txt"&gt;
      &amp;lt;xsl:next-match /&gt;
    &amp;lt;/xsl:variable&gt;

    &amp;lt;xsl:analyze-string regex="(\w|\-)+" select="$txt"&gt;
      &amp;lt;xsl:matching-substring&gt;
        &amp;lt;!-- A word --&gt;
        &amp;lt;xsl:message&gt;A word &amp;lt;xsl:value-of  select="."/&gt;&amp;lt;/xsl:message&gt;
        &amp;lt;xsl:choose&gt;
          &amp;lt;xsl:when test="contains(.,'-')"&gt;          
            &amp;lt;!-- A compound word --&gt;
            &amp;lt;code class='compound-word'&gt;&amp;lt;xsl:value-of  select="."/&gt;&amp;lt;/code&gt;
          &amp;lt;/xsl:when&gt;
          &amp;lt;xsl:otherwise&gt;
            &amp;lt;!-- A simple word --&gt;
            &amp;lt;xsl:value-of select="." /&gt;
          &amp;lt;/xsl:otherwise&gt;
        &amp;lt;/xsl:choose&gt;
      &amp;lt;/xsl:matching-substring&gt;
      &amp;lt;xsl:non-matching-substring&gt;
        &amp;lt;!-- Not a word --&gt;      
        &amp;lt;xsl:value-of select="." /&gt;
      &amp;lt;/xsl:non-matching-substring&gt;
    &amp;lt;/xsl:analyze-string&gt;

  &amp;lt;/xsl:template&gt;</codeblock>
				</li>
				<li>Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf">
						<i>template descriptor file</i>
					</xref> associated with your <i>publishing template</i> (the <i>.opt</i> file) and set the
					XSLT stylesheet created in previous step with the
						<codeph>com.oxygenxml.pdf.css.xsl.merged2merged</codeph> XSLT extension
					point:<codeblock outputclass="language-xml">&amp;lt;publishing-template&gt;
    ...
    &amp;lt;pdf&gt;
        ...        
        &amp;lt;xslt&gt;
            &amp;lt;extension 
              id="com.oxygenxml.pdf.css.xsl.merged2merged"
              file="xslt/merged2mergedExtension.xsl"/&gt;
        &amp;lt;/xslt&gt;</codeblock>
				</li>
				<li> Edit the <b>DITA Map PDF - based on HTML5 &amp;amp; CSS</b> transformation scenario. </li>
				<li> In the <uicontrol>Templates</uicontrol> tab, click the <uicontrol>Choose Custom
						Publishing Template</uicontrol> link and select your template. </li>
				<li> Click <uicontrol>OK</uicontrol> to save the changes to the transformation scenario. </li>
				<li> Run the transformation scenario. </li>
			</ol>
		</p>
	</body>
</topic>
