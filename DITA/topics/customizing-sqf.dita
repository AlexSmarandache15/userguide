<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing-sqf">
  <title>Customizing Schematron Quick Fixes</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Schematron Quick Fixes<indexterm>Customization</indexterm></indexterm>
        <indexterm>SQF<indexterm>Customization</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
    <body>
    <p>You can customize Schematron Quick Fixes by editing them directly in the current Schematron
      file or in a separate file. The Schematron Quick Fixes are an extension of the Schematron
      language and they allow you to define fixes for Schematron error messages. You can refer the
      quick fixes from the <codeph>assert</codeph> or <codeph>report</codeph> elements in the values
      of the <codeph>sqf:fix</codeph> attributes.</p>
      <section id="defining_a_schematron_quick_fix">
      <title>Defining a Schematron Quick Fix</title>
      <p>The basics of a Schematron Quick Fix is defined by an ID, name, description, and the
        operations to be executed.<ul id="ul_ydb_tlz_hr">
          <li><b>ID</b> - Defined by the <codeph>id</codeph> attribute from the <codeph>fix</codeph>
            element and must be unique in the current context. It is used to refer the quick fix
            from a <codeph>report</codeph> or <codeph>assert</codeph> element.</li>
          <li><b>Name</b> - The name of the quick fix is defined by the <codeph>title</codeph>
            element.</li>
          <li><b>Description</b> - Defined by the text in the paragraphs (<codeph>p</codeph>) of the
              <codeph>description</codeph> element.</li>
          <li><b>Operations</b> - The following types of operations are supported:<ul
              id="ul_q2q_fc1_3r">
              <li><codeph>&lt;sqf:add></codeph> - To add a new node or fragment in the
                document.</li>
              <li><codeph>&lt;sqf:delete></codeph> - To remove a node from the document.</li>
              <li><codeph>&lt;sqf:replace></codeph> - To replace a node with another node or
                fragment.</li>
              <li><codeph>&lt;sqf:stringReplace></codeph> - To replace text content with other text
                or a fragment.</li>
            </ul></li>
        </ul><fig>
          <title>Schematron Quick Fix Components</title>
          <image href="../img/sqf_Lang.png" id="image_wns_klz_hr"/>
        </fig></p>
      <p>The assertion message that generates the quick fix is added as the
          <codeph>description</codeph> of the problem to be fixed. The <codeph>title</codeph> is
        presented as the name of the quick fix. The content of the paragraphs (<codeph>p</codeph>)
        within the <codeph>description</codeph> element are presented in the tooltip message when
        the quick fix is selected. </p>
    </section>
      <section id="schematron_quick_fix_operations">
      <title>Schematron Quick Fix Operations</title>
      <p>
        <dl>
          <dlentry>
            <dt><b>Add</b></dt>
            <dd>The <codeph>&lt;sqf:add></codeph> element allows you to add a node to the instance.
              An anchor node is required to select the position for the new node. The anchor node
              can be selected by the <codeph>match</codeph> attribute. Otherwise, it is selected by
              the <codeph>context</codeph> attribute of the rule.</dd>
            <dd>The <codeph>target</codeph> attribute defines the name of the node to be added. It
              is required if the value of the <codeph>node-type</codeph> attribute is set to
              anything other than "comment".</dd>
            <dd>The <codeph>&lt;sqf:add></codeph> element has a <codeph>position</codeph> attribute
              and it determines the position relative to the anchor node. The new node could be
              specified as the first child of the anchor node, the last child of the anchor node,
              before the anchor node, or after the anchor node (<codeph>first-child</codeph> is the
              default value). If you want to add an attribute to the anchor node, do not use the
                <codeph>position</codeph> attribute.</dd>
            <dd>
              <note>If you insert an element and its content is empty, <ph keyref="product"/> will
                insert the required element content.</note>
            </dd>
            <dd>
              <p><b>An Example of the <codeph>&lt;sqf:add></codeph>
                Element:</b><codeblock outputclass="language-xml">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"
   xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
 queryBinding="xslt2">
   &lt;pattern>
     &lt;rule context="head">
        &lt;assert test="title" sqf:fix="addTitle">title element missing.&lt;/assert>
        &lt;sqf:fix id="addTitle">
            &lt;sqf:description>
                &lt;sqf:title>Insert title element.&lt;/sqf:title>
            &lt;/sqf:description>
           &lt;sqf:add target="title" node-type="element">Title text&lt;/sqf:add>
        &lt;/sqf:fix>
     &lt;/rule>
   &lt;/pattern>
&lt;/schema></codeblock></p>
            </dd>
            <dd><b>Specific Add Operations:</b><ul id="ul_a53_5nf_3r">
                <li><b>Insert Element</b> - To insert an element, use the
                    <codeph>&lt;sqf:add></codeph> element, set the value of the
                    <codeph>node-type</codeph> to "element", and specify the element
                    <term>QName</term> with the <codeph>target</codeph> attribute. If the element
                  has a prefix, it must be defined in the Schematron using a namespace declaration
                    (<codeph>&lt;ns uri="namespace" prefix="prefix"/></codeph>).</li>
                <li><b>Insert Attribute</b> - To insert an attribute, use the
                    <codeph>&lt;sqf:add></codeph> element, set the value of the
                    <codeph>node-type</codeph> to "attribute", and specify the attribute
                    <term>QName</term> with the <codeph>target</codeph> attribute. If the attribute
                  has a prefix, it must be defined in the Schematron using a namespace declaration
                    (<codeph>&lt;ns uri="namespace" prefix="prefix"/></codeph>).</li>
                <li><b>Insert Fragment</b> - If the <codeph>node-type</codeph> is not specified, the
                    <codeph>&lt;sqf:add></codeph> element will insert an XML fragment. The XML
                  fragment must be well formed. You can specify the fragment in the
                    <codeph>add</codeph> element or by using the <codeph>select</codeph> attribute. </li>
                <li><b>Insert Comment</b> - To insert a comment, use the
                    <codeph>&lt;sqf:add></codeph> element and set the value of the
                    <codeph>node-type</codeph> to "comment".</li>
                <li><b>Insert Processing Instruction</b> - To insert a processing instruction, use
                  the <codeph>&lt;sqf:add></codeph> element, set the value of the
                    <codeph>node-type</codeph> to "pi" or "processing-instruction", and specify the
                  name of the processing instruction in the <codeph>target</codeph> attribute.</li>
              </ul></dd>
          </dlentry>
          <dlentry>
            <dt><b>Delete</b></dt>
            <dd>The <codeph>&lt;sqf:delete></codeph> element allows you to remove any type of node
              (such as elements, attributes, text, comments, or processing instructions). To specify
              nodes for deletion the <codeph>&lt;sqf:delete></codeph> element can include a
                <codeph>match</codeph> attribute that is an XPath expression (the default value is
                <codeph>.</codeph>). If the <codeph>match</codeph> attribute is not included, it
              deletes the context node of the Schematron rule. <p><b>An Example of the
                    <codeph>&lt;sqf:delete></codeph>
                Element:</b><codeblock outputclass="language-xml">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2" 
    xmlns:sqf="http://www.schematron-quickfix.com/validator/process">
    &lt;pattern>
        &lt;rule context="*[@xml:lang]">
            &lt;report test="@xml:lang" sqf:fix="remove_lang">
                The attribute "xml:lang" is forbidden.&lt;/report>
            &lt;sqf:fix id="remove_lang">
                &lt;sqf:description>
                    &lt;sqf:title>Remove "xml:lang" attribute&lt;/sqf:title>
                &lt;/sqf:description>
                &lt;sqf:delete match="@xml:lang"/>
            &lt;/sqf:fix>
        &lt;/rule>
    &lt;/pattern>
&lt;/schema></codeblock></p></dd>
          </dlentry>
          <dlentry>
            <dt><b>Replace</b></dt>
            <dd>The <codeph>&lt;sqf:replace></codeph> element allows you to replace nodes. Similar
              to the <codeph>&lt;sqf:delete></codeph> element, it can include a
                <codeph>match</codeph> attribute. Otherwise, it replaces the context node of the
              rule. The <codeph>&lt;sqf:replace></codeph> element has three tasks. It identifies the
              nodes to be replaced, defines the replacing nodes, and defines their content.<p><b>An
                  Example of the <codeph>&lt;sqf:replace></codeph>
                Element:</b><codeblock outputclass="language-xml">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"
    xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
 queryBinding="xslt2">
    &lt;pattern>
        &lt;rule context="title">
            &lt;report test="exists(ph)" sqf:fix="resolvePh" role="warn">
                ph element is not allowed in title.&lt;/report>
            &lt;sqf:fix id="resolvePh">
                &lt;sqf:description>
                    &lt;sqf:title>Change the ph element into text&lt;/sqf:title>
                &lt;/sqf:description>
                &lt;sqf:replace match="ph">
                    &lt;value-of select="."/>
                &lt;/sqf:replace>
            &lt;/sqf:fix>
        &lt;/rule>
    &lt;/pattern>
&lt;/schema></codeblock></p></dd>
            <dd><b>Other Attributes for Replace Operations:</b><ul id="ul_upg_3zf_3r">
                <li><b><codeph>node-type</codeph></b> - Determines the type of the replacing node.
                  The permitted values include:<ul id="ul_pfj_mzf_3r">
                    <li><codeph>keep</codeph> - Keeps the node type of the node to be replaced.</li>
                    <li><codeph>element</codeph> - Replaces the node with an element.</li>
                    <li><codeph>attribute</codeph> - Replaces the node with an attribute.</li>
                    <li><codeph>pi</codeph> - Replaces the node with a processing instruction.</li>
                    <li><codeph>comment</codeph> - Replaces the node with a comment.</li>
                  </ul></li>
                <li><b><codeph>target</codeph></b> - By using a <term>QName</term> it gives the
                  replacing node a name. This is necessary when the value of the
                    <codeph>node-type</codeph> attribute is anything other than "comment".</li>
                <li><b><codeph>select</codeph></b> - Allows you to choose the content of the
                  replacing nodes. You can use XPath expressions with the <codeph>select</codeph>
                  attribute. If the <codeph>select</codeph> attribute is not specified then the
                  content of the <codeph>&lt;sqf:replace></codeph> element is used instead. </li>
              </ul></dd>
          </dlentry>
          <dlentry>
            <dt><b>String Replace</b></dt>
            <dd>The <codeph>&lt;sqf:stringReplace></codeph> element is different from the others. It
              can be used to find a sub-string of text content and replace it with nodes or other
                  strings.<p><b>Attributes for the String Replace Operation:</b><ul
                  id="ul_dwx_xxl_kr">
                  <li><b><codeph>match</codeph></b> - Allows you to select text nodes that contain
                    the sub-strings you want to replace.</li>
                  <li><b><codeph>select</codeph></b> - Allows you to select the replacing fragment,
                    in case you do not want to set it in the content of the
                      <codeph>stringReplace</codeph> element.</li>
                  <li><b><codeph>regex</codeph></b> - Matches the sub-strings using a regular
                      expression.<note>Regular expressions in the
                        <codeph>&lt;sqf:stringReplace></codeph> element always has the <i>dot
                        matches all</i> flag set to "true". Therefore, the line terminator will also
                      be matched by the regular expression. </note></li>
                </ul></p><note type="attention">The context of the content within the
                  <codeph>&lt;sqf:stringReplace></codeph> element is set to the whole text node,
                rather than the current sub-string.</note><p><b>An Example of the <codeph>&lt;sqf:stringReplace></codeph>
                Element:</b><codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron"
    xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
 queryBinding="xslt2">
    &lt;sch:pattern>
        &lt;sch:rule context="text()">
            &lt;sch:report test="matches(., '[oO][xX]ygen')"
 sqf:fix="changeWord">The oXygen word is not allowed&lt;/sch:report>
            &lt;sqf:fix id="changeWord">
                &lt;sqf:description>
                    &lt;sqf:title>Replace word with product&lt;/sqf:title>
                &lt;/sqf:description>
                &lt;sqf:stringReplace regex="[oO][xX]ygen">&lt;ph keyref="product"/>
                &lt;/sqf:stringReplace>
            &lt;/sqf:fix>
        &lt;/sch:rule>
    &lt;/sch:pattern>
&lt;/sch:schema></codeblock></p></dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="formatting_and_indenting_inserted_content">
      <title>Formatting and Indenting Inserted Content</title>
      <p> The content that is inserted by the <b>Add</b>, <b>Replace</b>, or <b>String Replace</b>
        operations is automatically indented unless you set the value of the
          <codeph>xml:space</codeph> attribute to <codeph>preserve</codeph> on the operation
        element. There are several methods available to format the content that is inserted:<ul
          id="ul_gkz_lfh_sr">
          <li><b><codeph>xsl:text</codeph></b> - You can use an <codeph>xsl:text</codeph> element to
            format the inserted content and keep the automatic indentation, as in the following
            example:<codeblock outputclass="language-xml">&lt;sqf:add position="last-child">
    &lt;row>&lt;xsl:text>
    &lt;/xsl:text>
        &lt;entry>First column&lt;/entry>&lt;xsl:text>
        &lt;/xsl:text>
        &lt;entry>Second column&lt;/entry>&lt;xsl:text>
        &lt;/xsl:text>
    &lt;/row>&lt;xsl:text>
    &lt;/xsl:text>
&lt;/sqf:add></codeblock></li>
          <li><b><codeph>xml:space</codeph></b> - Use the <codeph>xml:space</codeph> attribute and
            set its value to <codeph>preserve</codeph> to format the content and specify the spacing
            between elements, as in the following
            example:<codeblock outputclass="language-xml">&lt;sqf:add node-type="element" target="codeblock" xml:space="preserve">
    /* a long sample program */
    Do forever
     Say "Hello, World"
    End&lt;/sqf:add></codeblock></li>
        </ul></p>
    </section>
      <section id="usewhen_condition">
      <title><term>Use-When</term> Condition</title>
      <p>To restrict a quick fix or a specific operation to only be available if certain conditions
        are met, the <codeph>use-when</codeph> attribute can be included in the
          <codeph>&lt;sqf:fix></codeph> element or any of the SQF operation elements. The condition
        of the <codeph>use-when</codeph> attribute is an XPath expression and the fix or operation
        will be performed only if the condition is satisfied. In the following example, the
          <codeph>use-when</codeph> condition is applied to the <codeph>&lt;sqf:fix></codeph>
        element:<codeblock outputclass="language-xml">&lt;sqf:fix id="last" use-when="$colWidthSummarized - 100 lt $lastWidth"
 role="replace">
   &lt;sqf:description>
       &lt;sqf:title>Subtract excessive width from the last element.&lt;/sqf:title>
   &lt;/sqf:description>
   &lt;let name="delta" value="$colWidthSummarized - 100"/>
   &lt;sqf:add match="html:col[last()]" target="width" node-type="attribute">
    &lt;let name="newWidth" value="number(substring-before(@width,'%')) - $delta"/>
       &lt;value-of select="concat($newWidth,'%')"/>
   &lt;/sqf:add>
&lt;/sqf:fix>    </codeblock></p>
    </section>
    <section id="executing_schematron_quick_fixes_in_documents_oth">
      <title>Executing Schematron Quick Fixes in Documents Other than the Current One</title>
      <p>You can apply Schematron Quick Fixes over the nodes from referred documents (referred using
        XInclude or external entities), and you can access them as nodes in your current
        document.</p>
      <p>Also, you can apply the quick fixes over other documents using the <codeph>doc()</codeph>
        function in the value of the <codeph>match</codeph> attribute. For example, you can add a
        new key in the <filepath>keylist.xml</filepath> file using the following
        operation:<codeblock outputclass="language-xml">&lt;sqf:add match="doc('keylist.xml')/KeyList" target="Key"
 node-type="element" select="Key2"></codeblock></p>
    </section>
      <section id="additional_elements_supported_in_the_schematron_q">
      <title>Additional Elements Supported in the Schematron Quick Fixes</title>
      <p>
        <dl>
          <dlentry>
            <dt><b><codeph>&lt;sqf:call-fix></codeph></b></dt>
            <dd>This element calls another quick fix within a quick fix. The called quick fix must
              be defined globally or in the same Schematron rule as the calling quick fix. A calling
              quick fix adopts the activity elements of the called quick fix and should not include
              other activity elements. You can also specify which parameters are sent by using the
                <codeph>&lt;sqf:with-param></codeph> child element.</dd>
          </dlentry>
          <dlentry>
            <dt><b><codeph>&lt;sqf:group></codeph></b></dt>
            <dd>Allows you to group multiple quick fixes and refer them from an
                <codeph>assert</codeph> or <codeph>report</codeph> element.</dd>
          </dlentry>
          <dlentry>
            <dt><b><codeph>&lt;sqf:fixes></codeph></b></dt>
            <dd>Is defined globally and contains global fixes and groups of fixes.</dd>
          </dlentry>
          <dlentry>
            <dt><b><codeph>&lt;sqf:keep></codeph></b></dt>
            <dd>Used to copy the selected nodes that are specified by the <codeph>select</codeph>
              attribute. <note>In <ph keyref="product"/> the copied nodes cannot be manipulated by
                the current or other activity elements.</note></dd>
          </dlentry>
          <dlentry>
            <dt><b><codeph>&lt;sqf:param></codeph></b></dt>
            <dd>Defines a parameter for a quick fix. If the parameter is defined as
                <codeph>abstract</codeph> then the <codeph>type</codeph> and default value should
              not be specified and the fix can be called from an abstract pattern that defines this
              parameter.</dd>
          </dlentry>
          <dlentry>
            <dt><?oxy_comment_start author="Octavian" timestamp="20160706T171835+0300" comment="move it from the &quot;Additional Elements&quot; in a separate paragraph before it."?><b><codeph>&lt;sqf:user-entry></codeph></b><?oxy_comment_end?></dt>
            <dd><?oxy_comment_start author="Octavian" timestamp="20160706T172407+0300" comment="Maybe we ca rephrase it: &quot;Defines a value that must be set manualy by the user&quot;"?>Allows
              you to specify a value that will be specified by the user.<?oxy_comment_end?> If
              multiple <codeph>user-entry</codeph> elements are defined, <ph keyref="product"/> will
              display a dialog box for each one, in which the user can specify values. Also, the
                <codeph>&lt;user-entry></codeph> element can be used as an XPath variable where the
              XPath variable is the name of the <codeph>user-entry</codeph>, as in the following
              example:<codeblock outputclass="language-xml">&lt;sqf:fix id="duplicate">
   &lt;sqf:description>
      &lt;sqf:title>Change the name of the element&lt;/sqf:title>
   &lt;/sqf:description>
   &lt;sqf:user-entry name="newName" default="product">
      &lt;sqf:description>
          &lt;sqf:title>Enter the new name of the element&lt;/sqf:title>
      &lt;/sqf:description>
   &lt;/sqf:user-entry>
   &lt;sqf:replace node-type="element" target="{$newName}" select="child::node()"/>
&lt;/sqf:fix></codeblock></dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="other_sqf_notes">
      <title>Other SQF Notes</title>
      <note>The <codeph>sqf:default-fix</codeph> attribute is ignored in <ph keyref="product"
        />.</note>
    </section>
      <p>For more details on editing Schematron Quick Fixes, go to: <xref
        href="http://schematron-quickfix.github.io/sqf/publishing-snapshots/April2015Draft/spec/SQFSpec.html" format="html" scope="external">Schematron
        Quick Fix Specifications</xref></p>
    </body>
</topic>
