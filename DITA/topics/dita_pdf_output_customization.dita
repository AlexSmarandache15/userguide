<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dita_pdf_output_customization">
  <title><?oxy_comment_start author="Steven" timestamp="20170509T161816+0300" comment="Also need to add a new child topic for EXM-38857" id="j2y_sh4_mcb"?><?oxy_comment_start author="bogdan" timestamp="20180111T103225+0200" comment="See also EXM-40787" parentID="j2y_sh4_mcb" mid="1"?>Customizing
    the PDF Output<?oxy_comment_end mid="1"?><?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Output<indexterm>PDF output customization<indexterm>Creating a
                customization directory</indexterm></indexterm></indexterm></indexterm>
        <indexterm>DITA<indexterm>PDF output customization<indexterm>Creating a customization
              directory</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <?oxy_comment_start author="Steven" timestamp="20180104T120025+0200" comment="Probably, this initial info needs to be moved to &quot;PDF Output Customization&quot; along with info about Chemistry."?>
  <body><?oxy_comment_end?>
    <?oxy_comment_start author="Steven" timestamp="20170509T162328+0300" comment="Ask Radu ...  I&apos;m wondering what circumstances would a user choose the two methods? Most of the procedures in this section explain using the 2nd method, so what would be the reason/advantage of using the 1st method? Note: there will be a new topic for EXM-38857 that would use the 1st method, but is it just some very specific things?"?>
    <p>DITA Open Toolkit PDF output can be customized in several ways: <?oxy_comment_end?><ul
        id="ol_d4n_s5y_1j">
        <li><?oxy_comment_start author="Steven" timestamp="20170509T161610+0300" comment="We need a procedure for this just like we have for the next bullet. Probably something like: https://github.com/radu-pisoi/org.dita.pdf2.topic.numbering"?>Creating
          a DITA Open Toolkit plugin that adds extensions to the PDF output. More details can be
          found in the <xref href="http://www.dita-ot.org/" format="html" scope="external">DITA Open
            Toolkit Documentation</xref>.<?oxy_comment_end?></li>
        <li>Creating a customization directory and using it from the PDF transformation scenario. A
          small example of this procedure can be found below.</li>
      </ul></p>
    <section id="how_to_create_a_customization_directory_for_pdf_o">
      <title><?oxy_comment_start author="Steven" timestamp="20170509T160806+0300" comment="This procedure is really How to Embed a Company Logo. Maybe that should be it&apos;s own topic in this section and this procedure here should be more general."?>How
        to Create a Customization Directory for PDF Output<?oxy_comment_end?></title>
      <p>The following procedure explains how to do a basic customization of the PDF output by
        setting up a customization directory. An example of a common use case is
        <?oxy_comment_start author="Steven" timestamp="20180104T104442+0200" comment="Why would they do this instead of just adding the image in the first intro topic?"?>embedding
        a company logo image<?oxy_comment_end?> in the front matter of the book.</p>
      <ol>
        <li>Copy the entire directory: <filepath><term keyref="glossentry_dita_ot_dir"
            ></term>\plugins\org.dita.pdf2\Customization</filepath> to another location (for
          instance, <filepath>C:\Customization</filepath>).</li>
        <li>Copy your logo image to:
          <filepath>C:\Customization\common\artwork\logo.png</filepath>.</li>
        <li>Rename <filepath>C:\Customization\catalog.xml.orig</filepath> to:
            <filepath>C:\Customization\catalog.xml</filepath>.</li>
        <li>Open the <filepath>catalog.xml</filepath> in <ph keyref="product"></ph> and
            <i>uncomment</i> this line:
            <codeblock outputclass="language-xml">  &lt;!--uri name="cfg:fo/xsl/custom.xsl" uri="fo/xsl/custom.xsl"/--&gt;   </codeblock><p>It
            now looks like
          this:</p><codeblock outputclass="language-xml">&lt;uri name="cfg:fo/xsl/custom.xsl" uri="fo/xsl/custom.xsl"/></codeblock></li>
        <li>Rename the file: <filepath>C:\Customization\fo\xsl\custom.xsl.orig</filepath> to:
            <filepath>C:\Customization\fo\xsl\custom.xsl</filepath>
        </li>
        <li>Open the <filepath>custom.xsl</filepath> file in <ph keyref="product"/> and create the
          template called <b>createFrontCoverContents</b> for DITA-OT <ph
            keyref="webhelpPluginDITAOT2xVer"/>.<note type="tip">You can copy the same template from
                <filepath><term keyref="glossentry_dita_ot_dir"
              />\plugins\org.dita.pdf2\xsl\fo\front-matter.xsl</filepath> and modify it in whatever
            way necessary to achieve your specific goal. This new template in the
              <filepath>custom.xsl</filepath> file will override the same template from
                <filepath><term keyref="glossentry_dita_ot_dir"
              />\plugins\org.dita.pdf2\xsl\fo\front-matter.xsl</filepath>.</note><p><u><b>Example:</b></u></p><p>For
            example, if you are using DITA OT <ph keyref="webhelpPluginDITAOT2xVer"/>, the
              <filepath>custom.xsl</filepath> could look like
            this:<codeblock outputclass="language-xml">&lt;?xml version='1.0'?>
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:fo="http://www.w3.org/1999/XSL/Format"
    version="2.0">
  
&lt;xsl:template name="createFrontCoverContents">
 &lt;!-- set the title -->
 &lt;fo:block xsl:use-attribute-sets="__frontmatter__title">
  &lt;xsl:choose>
   &lt;xsl:when test="$map/*[contains(@class,' topic/title ')][1]">
    &lt;xsl:apply-templates select="$map/*[contains(@class,' topic/title ')][1]"/>
      &lt;/xsl:when>
      &lt;xsl:when test="$map//*[contains(@class,' bookmap/mainbooktitle ')][1]">
        &lt;xsl:apply-templates select="$map//*[contains
                                       (@class,' bookmap/mainbooktitle ')][1]"/>
      &lt;/xsl:when>
      &lt;xsl:when test="//*[contains(@class, ' map/map ')]/@title">
        &lt;xsl:value-of select="//*[contains(@class, ' map/map ')]/@title"/>
      &lt;/xsl:when>
      &lt;xsl:otherwise>
        &lt;xsl:value-of select="/descendant::*[contains
           (@class, ' topic/topic ')][1]/*[contains(@class, ' topic/title ')]"/>
   &lt;/xsl:otherwise>
  &lt;/xsl:choose>
 &lt;/fo:block>
    
 &lt;!-- set the subtitle -->
 &lt;xsl:apply-templates select="$map//*[contains
                                          (@class,' bookmap/booktitlealt ')]"/>
 &lt;fo:block xsl:use-attribute-sets="__frontmatter__owner">
  &lt;xsl:apply-templates select="$map//*[contains(@class,' bookmap/bookmeta ')]"/>
 &lt;/fo:block>
  
 &lt;!-- Load the image logo -->
  &lt;fo:block text-align="center" width="100%">
   &lt;fo:external-graphic
      src="url({concat($artworkPrefix, 
                          '/Customization/OpenTopic/common/artwork/logo.png')})"
    />
  &lt;/fo:block>
 &lt;/xsl:template>

&lt;/xsl:stylesheet></codeblock></p></li>
        <li>Edit the <uicontrol>DITA Map PDF</uicontrol> transformation scenario and in the
            <uicontrol>Parameters</uicontrol> tab, set the <b>customization.dir</b> parameter to
            <filepath>C:\Customization</filepath>.</li>
      </ol>
    </section>
    <note type="tip"> For other specific examples, see <xref
      href="http://www.dita-ot.org/dev/topics/pdf-customization.html" format="html"
        scope="external">DITA-OT 2.x Documentation - PDF Customization Plugin</xref>.</note>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link format="html" href="http://dita-generator-hrd.appspot.com/pdf-plugin/" scope="external">
        <linktext>Automatic PDF plugin customization generator by Jarno Elovirta.</linktext>
      </link>
      <link format="html" href="http://www.dita-ot.org/dev/topics/pdf-customization.html"
        scope="external">
        <linktext>DITA-OT 2.x Documentation - PDF Customization Plugin</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
