<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dcpp_parametrized_styling">
  <title>Styling Through Custom Parameters</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><ph keyref="pdf-html5-transformation"/><indexterm>Custom transformation
            parameters</indexterm></indexterm>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><ph keyref="single-topic-pdf-html5-transformation"/><indexterm>Custom transformation
            parameters</indexterm></indexterm>
        <indexterm product="pdf-css ope">Custom transformation parameters</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>You can activate parts of your CSS by using custom transformation parameters that start with
      the <codeph>args.css.param.</codeph> prefix. </p>
    <p>These parameters are recognized by the publishing pipeline and are forwarded as synthetic
      attributes on the root element of the merged map. The last part of the parameter name will
      become the attribute name, while the value of the parameter will become the attribute value.
      The namespace of these synthetic attributes is:
        <codeph>http://www.oxygenxml.com/extensions/publishing/dita/css/params</codeph>. </p>
    <p>When using the <b><ph keyref="pdf-html5-transformation"/></b> or the <b><ph
          keyref="single-topic-pdf-html5-transformation"/></b> transformations, the generated
      attribute will be in no namespace.</p>
    <note type="other" othertype="Notes">
      <ul>
        <li>Make sure the name of your custom parameter does not conflict with an attribute name
          that may already exist on the root element. </li>
        <li>Use only Latin alphanumeric characters for parameter names.</li>
        <li>You can set multiple styling parameters at the same time.</li>
      </ul>
    </note>
    <section id="section_ecl_z1b_tfb">
      <title>How to Limit the Depth of the TOC Using a Parameter</title>
      <p>In the following example, a custom parameter is used to switch from a full depth table of
        contents to a flat one that shows only the titles of the first-level topics (such as
        chapters, preface, notices). </p>
      <p>The custom parameter is:</p>
      <codeblock outputclass="language-ini">args.css.param.only-chapters-in-toc="yes"</codeblock>
      <p>The CSS that hides the <i>topicrefs</i> at level 2 or
        more:<codeblock outputclass="language-css">:root[only-chapters-in-toc='yes'] *[class ~= "toc/toc"] 
         > *[class ~= "map/topicref"]> *[class ~= "map/topicref"] {
  display:none;
}</codeblock>The
          <codeph>:root[a|only-chapters-in-toc='yes']</codeph> selector makes the rule activate only
        when the attribute is set.</p>
    </section>
    <section id="section_mpk_dbb_tfb">
      <title>How to Change the Page Size Using a Parameter</title>
      <p>In the following example, a custom parameter is used to modify the page size. The parameter
        is defined in the transformation scenario
        as:<codeblock outputclass="language-ini">args.css.param.page-size="A4"</codeblock></p>
      <p>Then in the CSS, the attribute value is extracted and used as follows:</p>
      <codeblock outputclass="language-css">@page {
    size: oxy_xpath('/*/@*[local-name()="page-size"][1]');
}</codeblock>
    </section>
		<section id="section_dzv_lx1_4jb">
			<title>How to Change the Cover Page Using a Parameter</title>
			<p>In the following example, a custom parameter is used to set the path of the cover page. The
        parameter is defined in the transformation scenario
        as:<codeblock outputclass="language-ini">args.css.param.cover-page="path/to/cover-page.svg"</codeblock></p>
			<p>Then in the CSS, the attribute value is extracted and used as follows:</p>
			<codeblock outputclass="language-css">@page front-page {
    background-image: url(oxy_xpath('/*/@*[local-name()="cover-page"][1]'));
}</codeblock>
		</section>
  </body>
</topic>
