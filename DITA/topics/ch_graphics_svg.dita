<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_graphics_svg">
  <title>SVG</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Graphics<indexterm>SVG</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_smv_dgk_54b"><ph keyref="product"/> supports SVG images. The main advantage of using SVG is that the image
      looks good on paper no matter its size. </p>
    <section id="section_b1s_vk1_yz">
      <title>SVG Referenced or Embedded in the Document</title>
      <p id="p_tmv_dgk_54b">These can either be referenced as external
        resources:<codeblock outputclass="language-xml" id="codeblock_umv_dgk_54b">&lt;p&gt; This is an SVG showing a happy face: &lt;img src="happy.svg"/&gt;&lt;/p&gt;</codeblock></p>
      <p id="p_vmv_dgk_54b">or embedded in the document as SVG
        fragments:<codeblock outputclass="language-xml" id="codeblock_wmv_dgk_54b">&lt;p&gt; This is a red circle: 
   &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" width="50" height="50"&gt;
       &lt;circle cx="25" cy="25" r="10" /&gt;
   &lt;/svg&gt;
&lt;/p&gt;</codeblock></p>
      <p id="p_xmv_dgk_54b">The document styles are also applied to the SVG fragments. For instance, if the
          <xmlelement>circle</xmlelement> element has the <codeph>sun</codeph> class, you could
        change its appearance by using <codeph>.sun {fill="orange"}</codeph> in your main CSS. As a
        general rule of thumb, keep distinct names for the SVG fragment class attributes from the
        ones used for general content styling.<note id="note_ymv_dgk_54b">For HTML5, the namespace declaration is not
          required.</note></p>
    </section>
    <section id="section_m2s_yk1_yz">
      <title>Using SVG for Styling</title>
      <p id="p_zmv_dgk_54b">To use SVG to decorate an element:</p>
      <codeblock outputclass="language-css" id="codeblock_anv_dgk_54b">div.note:before {
    content:url("images/note.svg");
}</codeblock>
      <p id="p_bnv_dgk_54b">To set an SVG image as the background of a page, or a page margin box:</p>
      <codeblock outputclass="language-css" id="codeblock_cnv_dgk_54b">@page coverpage{
    background-image: url("images/clipart.svg");
    background-repeat:no-repeat;
    background-position:center center;
    
    @top-left {
        background-image: url("images/company.svg");
        background-repeat:no-repeat;
    }
}</codeblock>
      <note id="note_dnv_dgk_54b">The <codeph>image-resolution</codeph> CSS property does not apply for SVG
        vectors.</note>
    </section>
    <section id="section_d3v_mfm_knb">
      <title>Linking from SVG to Parts of the Host Document</title>
      <p id="p_env_dgk_54b">If you need to use the graphics as a type of table of contents, you can place links over
        parts of the image (used as callouts) that point to some descriptive sections in your
        document by using the <xmlelement>a xlink:href=".."</xmlelement> markup. This is similar to
        what the <xmlelement>imagemap</xmlelement> HTML element does, but this is encoded directly
        in the graphics:</p>
      <codeblock outputclass="language-xml" id="codeblock_fnv_dgk_54b">&lt;p&gt; This image has a link that points to a paragraph:
   &lt;svg 
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          viewBox="0 0 50 50" 
          width="50" 
          height="50"&gt;

      &lt;a xlink:href="explain-circle"&gt;
        &lt;circle cx="25" cy="25" r="10" /&gt;
      &lt;a&gt;

   &lt;/svg&gt;
&lt;/p&gt;
....
&lt;p id="explain-circle"&gt; 
  The circle is a round shape.
&lt;/p&gt;</codeblock>
    </section>
  </body>
</topic>