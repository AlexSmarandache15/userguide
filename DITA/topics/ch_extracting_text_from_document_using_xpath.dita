<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_extracting_text_from_document_using_xpath">
    <title>Extracting Text from Document Using XPath</title>
    <body>
    <p>You can use the <codeph>oxy_xpath</codeph> CSS extension function to execute XPath over the
      input document. The main advantage is that you can do execute any XPath processing
        including:<ul id="ul_tdr_1vc_dfb">
        <li>document data retrieval </li>
        <li>mathematical calculus</li>
        <li>if then else conditions</li>
      </ul>You can use <codeph>oxy_xpath</codeph> in values of all properties defined in a page
      rule.</p>
        <note type="important">This technique is not standard and is guaranteed to work only with
      this processor. </note>
    <note>The XPath expression from the page rules are evaluated in the context of the document root
      element, so you will need to use absolute expressions starting with <codeph>/</codeph> or
        <codeph>//</codeph>. This is different from the case when the <codeph>oxy_xpath</codeph> is
      used in CSS rules that match an element, in this case the XPath expressions are evaluated in
      the context of the matched element and you can use relative paths.</note>
    <note>XPath 2.0 is supported. (not schema aware) </note>
    <p>Suppose your document defines a creation date in a metadata section. This section may be
      anywhere in your document. To place the creation date in the center of the publication
      header:</p>
    <p>
      <codeblock outputclass="language-css">@page {
   @top-center {
        content: "Created: " oxy_xpath("//div[@class='created']/text()");
   }
}</codeblock>
    </p>
    <p>Another example is to use an image from the document into the publication header:</p>
    <p>
      <codeblock outputclass="language-css">@page {
   @top-center {
        content: url(oxy_xpath('//img[@class='product-img']/@href'));
   }
}</codeblock>
    </p>
    <p>If the URL returned by <codeph>oxy_xpath</codeph> is not absolute it is considered to be
      relative to the CSS file. To obtain an URL relative to the XML document you can use in the
      XPath expression functions like <codeph>resolve-uri</codeph> and
      <codeph>document-uri</codeph>:</p>
    <codeblock outputclass="language-css">@page {
   @top-center {
        content: url(oxy_xpath(resolve-uri(//img[@class='product-img']/@href, document-uri(/))));
   }
}</codeblock>
    </body>
</topic>
