<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="subject-scheme-map">
  <title>Profiling with a Subject Scheme Map</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Profiling<indexterm>Using subject scheme
            map</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>A subject scheme map allows you to create custom profiling values and to manage the profiling
      attribute values used in the DITA topics without having to write a DITA specialization.</p>
    <p>Subject scheme maps use key definitions to define a collection of profiling values. A map
      that uses the set of profiling values must reference the subject scheme map in which the
      profiling values are defined at its highest level, as in the following
      example:<codeblock outputclass="language-xml">&lt;topicref href="test.ditamap" format="ditamap" type="subjectScheme"/></codeblock></p>
    <p>A profiled value should be a short and readable keyword that identifies a metadata attribute.
      For example, the <codeph>audience</codeph> metadata attribute may take a value that identifies
      the user group associated with a particular content unit. Typical user values for a
      medical-equipment product line might include <codeph>therapist</codeph>,
        <codeph>oncologist</codeph>, <codeph>physicist</codeph>, <codeph>radiologist</codeph>,
        <codeph>surgeon</codeph>, and so on. A subject scheme map can define a list of these
      audience values.</p>
    <p><b>EXAMPLE:</b></p>
    <p>The following is an example of content from a subject scheme:</p>
    <codeblock outputclass="language-xml">&lt;subjectScheme>
  &lt;!-- Pull in a scheme that defines audience user values -->
  &lt;subjectdef keys="users">
    &lt;subjectdef keys="therapist"/>
    &lt;subjectdef keys="oncologist"/>
    &lt;subjectdef keys="physicist"/>
    &lt;subjectdef keys="radiologist"/>
    &lt;subjectdef keys="surgeon">
      &lt;subjectdef keys="neuro-surgeon"/>
      &lt;subjectdef keys="plastic-surgeon"/>
    &lt;/subjectdef>
  &lt;/subjectdef>
  &lt;!-- Define an enumeration of the audience attribute, equal to
       each value in the users subject. This makes the following values
       valid for the audience attribute: therapist, oncologist, physicist,
       radiologist, surgeon, neuro-surgeon and plastic-surgeon. -->
  &lt;enumerationdef>
    &lt;attributedef name="audience"/>
    &lt;subjectdef keyref="users"/>
  &lt;/enumerationdef>
&lt;/subjectScheme></codeblock>
    <section id="where_the_profiling_attributes_are_available_in">
      <title>Where the Profiling Attributes are Available in <ph keyref="product"/></title>
      <p>When you edit a DITA topic in the <uicontrol>Text</uicontrol> or
          <uicontrol>Author</uicontrol> mode, <ph keyref="product"/> collects all the profiling
        values from the <term>subject scheme map</term> that is referenced in the map that is
        currently opened in the <xref href="dita-maps-manager.dita">DITA Maps Manager</xref> (or set
        as the <xref href="root-map.dita#root-map">root map</xref>). The values of profiling
        attribute defined in a Subject Scheme Map are available in the <xref
          href="dita-profiling-conditional-text.dita#dita-profiling-conditional-text/profiling-content-section"
            ><uicontrol>Edit Profiling Attribute</uicontrol> dialog box</xref>, regardless of their
        mapping in the <xref
          href="preferences-profiling-conditions.dita#preferences-profiling-conditions"
            ><uicontrol>Profiling/Conditional Text</uicontrol> preferences page</xref>. They are
        also available as proposals for values in the <xref
          href="streamline-with-content-completion.dita#streamline-with-content-completion"
            ><wintitle>Content Completion Assistant</wintitle></xref>.<note>In the example above,
          the values <codeph>therapist</codeph>, <codeph>oncologist</codeph>,
            <codeph>physicist</codeph>, and so on, are displayed in the <wintitle>Content Completion
            Assistant</wintitle> as values for the <codeph>audience</codeph> attribute.</note></p>
    </section>
    <section id="filtering_attribute_values">
      <title>Filtering Attribute Values</title>
      <p>By defining controlled values and using hierarchical levels in the subject scheme, you can
        classify content for filtering and flagging when the map is transformed. You can also filter
        attribute values by using a <xref href="dita-ditaval-file.dita#dita-ditaval-file">DITAVAL
          filter file</xref>.</p>
      <p>For more details about how hierarchical filtering, defining controlled values, and using
          <term>subject scheme maps</term>, refer to the following resources:<ul>
          <li><xref
              href="https://www.oasis-open.org/committees/download.php/35894/subjectSchema.html"
              format="html">Subject Scheme Maps - Oasis</xref></li>
          <li><xref
              href="http://docs.oasis-open.org/dita/v1.2/os/spec/langref/subjectScheme.html#subjectSchemehttp://docs.oasis-open.org/dita/v1.2/os/spec/langref/subjectScheme.html%23subjectScheme"
              format="html" scope="external">Subject Scheme Specifications</xref></li>
        </ul></p>
    </section>
  </body>
  <related-links>
    <link href="http://www.oxygenxml.com/demo/DITA_Subject_Scheme.html" format="html"
      scope="external">
      <linktext>Oxygen Video Tutorial: DITA Subject Scheme</linktext>
    </link>
    <link
      href="http://docs.oasis-open.org/dita/v1.2/os/spec/langref/subjectScheme.html#subjectScheme"
      format="html" scope="external">
      <linktext>Subject Scheme Specifications</linktext>
    </link>
    <link href="https://www.oasis-open.org/committees/download.php/35894/subjectSchema.html"
      format="html" scope="external">
      <linktext>Subject Scheme Maps - Oasis</linktext>
    </link>
  </related-links>
</topic>
