<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webhelp_responsive_customization">
  <?oxy_comment_start author="radu_pisoi" timestamp="20180214T231427+0200" comment="TODO: Update for Publishing template"?>
  <title>WebHelp Responsive Customization Methods<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>WebHelp Responsive system<indexterm>Customization methods</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>There are several methods that you can use to customize your WebHelp Responsive output. This
      topic provides information on each of the methods and highlights its advantages so that you
      can choose the best possible method based upon your needs.</p>
    <section id="section_placeholders_usage">
      <title><?oxy_comment_start author="radu" timestamp="20180129T210345+0200" comment="This content was moved to publishing template, HTML fragments. Remove or update it."?>Using
        Parameters to Insert Custom XHTML Fragments in Predefined
        Placeholders<?oxy_comment_end?></title>
      <p>The WebHelp Responsive template contains a series of component placeholders. Some of these
        placeholders are left empty in the default output configurations, but you can use them to
        display custom content. This method is recommended if you want to use an existing skin and
        simply make some minor changes or additions in certain locations within the final
        output.</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul>
            <li>This method is very easy, since the fragments for the placeholders can be specified
              in the transformation scenario.</li>
            <li>Advanced knowledge of CSS styling is not required for this method.</li>
          </ul>
        </p></sectiondiv>
      <p>Each such placeholder has an associated parameter in the transformation. These predefined
        empty placeholder parameters are illustrated and described below:</p>
      <p>
        <fig>
          <title>Predefined Placeholders Diagram</title>
          <image href="../img/webhelp_parameters_list.png" placement="inline"/>
        </fig>
      </p>
      <p>Each of these parameters can hold either an XHTML fragment or a path to a file that
        contains a well-formed XHTML fragment:<dl>
          <dlentry id="webhelp-fragment-head">
            <dt>1- <ph conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_head"
              /></dt>
            <dd><ph conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_head"/></dd>
          </dlentry>
          <dlentry>
            <dt>2- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_body"
              /></dt>
            <dd><ph conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_body"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>3- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_logo_and_title"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_logo_and_title"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>4- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_logo_and_title"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_logo_and_title"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>5- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_top_menu"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_top_menu"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>6- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_top_menu"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_top_menu"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>7- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_main_page_search"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_main_page_search"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>8- <ph conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_welcome"
              /></dt>
            <dd><ph conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_welcome"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>9- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_main_page_search"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_main_page_search"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>10- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_toc_or_tiles"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_toc_or_tiles"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>11- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_toc_or_tiles"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_toc_or_tiles"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>12- <ph conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_footer"
              /></dt>
            <dd><ph conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_footer"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>13- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_body"
              /></dt>
            <dd><ph conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_body"
              /></dd>
          </dlentry>
        </dl></p>
      <sectiondiv><b>EXAMPLE:</b></sectiondiv>
      <p product="author developer editor authorEclipse developerEclipse editorEclipse">To insert a
        message above the search field component in the main page of the output, follow this procedure:<ol>
          <li>Edit the <b>WebHelp Responsive</b> transformation scenario.</li>
          <li>Go to <uicontrol>Parameters</uicontrol> tab and find the parameter associated with the
            place holder that you want to use. In this case, it is called
              <codeph>webhelp.fragment.welcome</codeph>.</li>
          <li>Edit the parameter. Depending on the size of the content you want to add, you can
            insert one of the following:<ul>
              <li>A small well-formed XHTML fragment, such as: <codeph>&lt;i>Welcome to our user
                  guide&lt;/i></codeph>.</li>
              <li>A path to a file that contains well-formed XHTML content.</li>
            </ul></li>
        </ol></p>
      <p product="webhelp-responsive">To insert a message above the search field component in the
        main page of the output, follow this procedure:<ol>
          <li>Find the parameter associated with the place holder that you want to use. In this
            case, it is called <codeph>webhelp.fragment.welcome</codeph>.</li>
          <li>Include that parameter in your transformation script. Its value can be either of the following:<ul>
              <li>A small well-formed XHTML fragment, such as: <codeph>&lt;i>Welcome to our user
                  guide&lt;/i></codeph>.</li>
              <li>A path to a file that contains well-formed XHTML content.</li>
            </ul></li>
        </ol></p>
      <p product="webhelp-responsive">For example:<ul>
          <li><b>Windows:</b><p><codeph>dita.bat -i c:\mySample.ditamap -f webhelp-responsive
                -Dwebhelp.fragment.welcome=c:\myMessage.xhtml</codeph></p></li>
          <li><b>Mac OS X/ Linux:</b><p><codeph>dita -i C:/mySample.ditamap -f webhelp-responsive
                -Dwebhelp.fragment.welcome=C:/myMessage.xhtml</codeph></p></li>
        </ul></p>
    </section>
    <section id="customizing_webhelp_output_with_a_custom_css">
      <title>Customize WebHelp Output with a Custom CSS</title>
      <p>This method is recommended if you just want to adapt an existing style that is very close
        to what you need (such as a built-in skin) and only need to change the styling of the final
        output. For example, this might be the case if you simply want to change a color, or adjust
        some of the margins or paddings of certain components.</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul>
            <li>This method could be used as a quick and easy way to make small styling
              changes.</li>
            <li>The custom CSS can be distributed with your project and shared with other members of
              your team.</li>
            <li>This method can be used for advanced and precise styling. </li>
          </ul>
        </p></sectiondiv>
      <sectiondiv><b>Additional Notes:</b><p>
          <ul>
            <li>The fonts, images, and other resources must be stored in a remote server
              location.</li>
            <li product="author developer editor authorEclipse developerEclipse editorEclipse">This
              type of customization will not appear in the <codeph>Templates</codeph> tab of the
              transformation scenario. Instead, the custom CSS needs to be set as a parameter of an
              existing transformation scenario.</li>
            <li product="webhelp-responsive">The path to the custom CSS needs to be specified in the
                <codeph>args.css</codeph> parameter.</li>
          </ul>
        </p></sectiondiv>
      <p product="author developer editor authorEclipse developerEclipse editorEclipse">To set a
        custom CSS to be used in a transformation scenario:<ol id="ul_ux5_4pl_qv">
          <li>Edit the <b>WebHelp Responsive</b> transformation scenario.</li>
          <li>Open the <uicontrol>Parameters</uicontrol> tab.</li>
          <li><ph id="DITA-parameters-ph">Set the <codeph>args.css</codeph> parameter to the path of
              your custom CSS file. Also, set the <codeph>args.copycss</codeph> parameter to
                <codeph>yes</codeph> to automatically copy your custom CSS in the output folder when
              the transformation scenario is processed.</ph> Also, if your customization CSS
            requires additional resources, you can copy them to the generated output by specifying
            the <xref href="wh-responsive-output.dita#wh-responsive-output/wh_custom_resources"
                ><i>webhelp.custom.resources</i> parameter</xref>.</li>
        </ol></p>
      <p product="webhelp-responsive">To set a custom CSS to be used in a transformation:<ol>
          <li>Use the <codeph>args.css</codeph> parameter to specify the path of your custom CSS
            file.</li>
          <li>Set the <codeph>args.copycss</codeph> parameter to <codeph>yes</codeph> to
            automatically copy your custom CSS in the output folder when the transformation is
            processed.</li>
          <li>If your customization CSS requires additional resources, you can copy them to the
            generated output by using the <xref
              href="webhelp-plugin-additional-parameters.dita#webhelp-plugin-additional-parameters/webhelp-custom-resources"
                ><i>webhelp.custom.resources</i> parameter</xref>.</li>
        </ol></p>
      <p product="webhelp-responsive">For example:<ul>
          <li><b>Windows:</b><p><codeph>dita.bat -i c:\mySample.ditamap -f webhelp-responsive
                -Dargs.css=c:\myFile.css -Dargs.copycss=yes
                -Dwebhelp.custom.resources=c:\resources</codeph></p></li>
          <li><b>Mac OS X/ Linux:</b><p><codeph>dita -i C:/mySample.ditamap -f webhelp-responsive
                -Dargs.css=C:/myFile.css -Dargs.copycss=yes
                -Dwebhelp.custom.resources=C:/resources</codeph></p></li>
        </ul></p>
      <p>You could also override the default XSLT templates that are used for WebHelp
        transformations by using some extension points. For information about this method, see <xref
          keyref="whr-responsive-override-xslt-dita-xslt-import-sample"/>.</p>
    </section>
  </body>
</topic>
