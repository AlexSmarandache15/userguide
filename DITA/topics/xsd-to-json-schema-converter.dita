<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="xsd-to-json-schema-converter">
  <title>XSD to JSON Schema Converter</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>JSON documents<indexterm>XSD to JSON Schema converter</indexterm></indexterm>
        <indexterm>Convert XSD to JSON Schema</indexterm>
        <indexterm>XSD to JSON Schema tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> includes a tool for converting an XML Schema file (XSD) to a JSON
      Schema file. The <uicontrol>XSD to JSON Schema</uicontrol> action for invoking the tool can be
      found in the <menucascade>
        <uicontrol>Tools</uicontrol>
        <uicontrol>JSON Tools</uicontrol>
      </menucascade> menu. It requires an additional add-on to be installed, so the first time you
      invoke the action, <ph keyref="product"/> will present a dialog box asking if you want to
      install it. Once installed, you need to restart <ph keyref="product"/> and the <uicontrol>XSD
        to JSON Schema</uicontrol> action will invoke the tool.</p>
    <p>To convert an XML Schema (XSD) to a JSON Schema, follow these steps:</p>
    <ol id="procedure-import-from-HTML">
      <li>
        <p>Select the <uicontrol>XSD to JSON Schema</uicontrol> action from the <menucascade>
            <uicontrol>Tools</uicontrol>
            <uicontrol>JSON Tools</uicontrol>
          </menucascade> menu.</p>
        <p><b>Step Result:</b> The <uicontrol>XSD to JSON Schema</uicontrol> dialog box is
          displayed:</p>
        <p>
          <fig id="fig_mvj_pvd_w3b">
            <title>XSD to JSON Schema Dialog Box</title>
            <image href="../img/Convert_XSD_JSON_Schema.png" id="image_twc_5qf_jd"/>
          </fig>
        </p>
      </li>
      <li> Choose or enter the <uicontrol>XSD URL</uicontrol> of the XML Schema document. The
        conversion supports XSD versions 1.0 and 1.1.</li>
      <li> Choose the path for the <uicontrol>Output file</uicontrol>. </li>
      <li> Select the <uicontrol>Open in Editor</uicontrol> option to open the resulting JSON Schema
        document in the main editing pane. </li>
      <li> Click the <uicontrol>Convert</uicontrol> button. </li>
    </ol>
    <p><b>Result:</b> The original XSD document is now converted to a JSON Schema document. The
      resulting JSON Schema will be <i>draft-07</i>.<note type="tip">For details about the
        conversion mappings, see <xref
          href="https://github.com/highsource/jsonix-schema-compiler/wiki/JSON-Schema-for-XML-Schema"
          format="html" scope="external"/>.</note></p>
    <section id="limitations">
      <title>Conversion Limitations</title>
      <p>In most cases, the conversion creates an equivalent schema, but there are some
          limitations:<ul id="ul_zb2_kch_cjb">
          <li>Restrictions/facets are not taken into consideration when converting
              (<i>fractionDigits, pattern, totalDigits, whiteSpace</i> and the restrictions for
            length, except <i>enumeration)</i>. However, extensions and indicators are properly
            converted (<i>minOccurs, maxOccurs, group, sequence, choice</i>).</li>
          <li>The <xmlelement>documentation</xmlelement> element is not converted into
              <xmlelement>description</xmlelement>.</li>
          <li>The <xmlatt>substitutionGroup</xmlatt> attribute for an element that has no declared
            type becomes a reference to the element that can substitute it.</li>
          <li>The <xmlatt>block</xmlatt> attribute is not taken into consideration during the
            conversion.</li>
          <li>Considering that a JSON Schema has a smaller range of data types, the XSD data types
            are converted like this:<ul id="ul_mhc_pch_cjb">
              <li><b>XSD String data types</b> → <codeph>{"type": "string"}</codeph></li>
              <li><b>XSD Date and Time data types</b> → <codeph>{"type": "string", "format":
                  x}</codeph> (where <b>x</b> is: "date", "time", or "date-time")</li>
              <li><b>XSD Numeric data types</b> → <codeph>{"type": "number"} or {"type":
                  "integer"}</codeph></li>
              <li><b>XSD "anyURI"</b> → <codeph>{"type": "string", "format": "uri"}</codeph>
              </li>
            </ul></li>
        </ul></p>
    </section>
  </body>
</topic>
