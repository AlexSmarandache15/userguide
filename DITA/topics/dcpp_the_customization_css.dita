<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dcpp_the_customization_css">
  <title>Customization CSS</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><ph keyref="wysywig-or-html5-transformation"/><indexterm>Customization
          CSS</indexterm></indexterm>
        <indexterm product="pdf-css">Customization CSS</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The publishing process is driven by a customization CSS.</p>
    <section id="dita_map_pdf__based_on_html5_and_css_transformati">
      <title>DITA Map PDF - based on HTML5 and CSS Transformation Type</title>
      <p>To change the styling of the output for the <uicontrol>DITA Map PDF - based on HTML5 &amp;
          CSS</uicontrol> transformation scenario:<ol id="ol_p2g_l1t_zdb">
          <li>Create the CSS file that will contain all your customizations. It is recommended to
            create this file in your project directory so you can edit it easily.</li>
          <li>Add the custom CSS rules. See the various topics in this section for assistance with
            specific types of customizations.</li>
          <li>For linking the CSS file, you have two options:<ol>
              <li>Create a publishing template, create the customization CSS file inside the
                template folder and link it into the publishing template descriptor. See <xref
                  keyref="wh-publishing-template"
                  product="author developer editor authorEclipse developerEclipse editorEclipse"
                  /><xref
                  href="https://www.oxygenxml.com/doc/ug-editor/topics/whr-publishing-template.html"
                  format="html" scope="external" product="pdf-css">Publishing Templates</xref>.</li>
              <li>Choose an existing publishing template, then edit the scenario and set the full
                path to the custom CSS file as the value of the <codeph>args.css</codeph> parameter.
                The rules from custom CSS will override the rules from the template CSS files.</li>
            </ol></li>
          <li>Run the transformation scenario.</li>
        </ol></p>
    </section>
    <section id="dita_map_pdf__based_on_dita_and_css_wysiwyg_trans">
      <title>DITA Map PDF - based on DITA and CSS (WYSIWYG) Transformation Type</title>
      <p>To change the styling of the output for the <uicontrol>DITA Map PDF - based on DITA &amp;
          CSS</uicontrol> transformation scenario:</p>
      <p>
        <ol>
          <li>Create the CSS file that will contain all your customizations. It is recommended to
            create this file in your project directory so you can edit it easily.<note
              type="important">Always use CSS rules that match the DITA class attribute values.
              Avoid using CSS selectors containing element names, because they have a weaker
              specificity and will not override the styles defined in the built-in CSS files. For
              instance, to match the <codeph>p</codeph> element, use its class
              attribute:<codeblock outputclass="language-css">*[class ~= "topic/p"] {
  color: gray;
}</codeblock>Instead
              of:<codeblock outputclass="language-css">p {
  color: gray;
}</codeblock></note><note
              type="tip">You can organize the CSS rules in separate files, but they all need to be
              imported from a single master CSS file. For simplicity, this manual provides
              instructions based upon a single CSS file.</note><note><xref
                href="https://scotch.io/tutorials/getting-started-with-less" format="html"
                scope="external">LESS</xref> files are supported (LESS is a CSS pre-processor with
              CSS-like syntax, but has a lot of features designed to speed up
            development).</note></li>
          <li>Add the custom CSS rules. See the various topics in this section for assistance with
            specific types of customizations.</li>
          <li>Set the full path to the custom CSS file as the value of the <codeph>args.css</codeph>
            parameter.</li>
          <li>Run the transformation scenario.</li>
        </ol>
      </p>
    </section>
  </body>
</topic>
