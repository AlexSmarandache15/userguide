<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dita-migrating-various-formats">
  <title>Migrating Various Document Formats to and from DITA</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Migrate various formats to DITA</indexterm></indexterm>
        <indexterm>DITA to Confluence</indexterm>
        <indexterm>Confluence</indexterm>
        <indexterm>DocBook to DITA</indexterm>
        <indexterm>Google Docs to DITA</indexterm>
        <indexterm>Markdown to DITA</indexterm>
        <indexterm>HTML to DITA</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_tzn_dgk_54b">When organizations decide to use DITA for structuring, developing, managing, or publishing
      content, they usually already have content written in other formats and need to convert it to
      DITA. There are a variety of possibilities for a conversion to DITA, depending on the original
      format of the content.</p>
    <p id="p_uzn_dgk_54b">Migration from other formats to DITA is rarely perfect and manual changes may need to be made
      to the converted content, but the methods described below should help you find the best
      approach for your particular case.</p>
    <section id="section_bfz_z54_4gb">
      <title>Migrating Microsoft Office and Other Similar Types of Documents to DITA</title>
      <p id="p_vzn_dgk_54b">There are various possibilities for migrating content from Microsoft OfficeÂ® (and other
        Office-type formats) to DITA. For details, see <xref href="ooxml-to-dita.dita"/>.</p>
    </section>
    <section id="section_j23_k54_4gb">
      <title>Migrating DocBook Content to DITA.</title>
      <p id="p_wzn_dgk_54b">Since DocBook content is already in XML format, migrating it to DITA is more straight
        forward than with other non-XML formats:<ol id="ol_rnd_t54_4gb">
          <li id="li_xzn_dgk_54b">Convert the DocBook content to a single large DITA composite file by performing a
              <xref href="apply-batch-transformation.dita">batch transformation</xref> on all the
              <b>DocBook</b> documents:<ol id="ol_yzn_dgk_54b">
              <li id="li_zzn_dgk_54b">Select all the <b>DocBook</b> documents in the <xref
                  href="using-the-project-view.dita"><uicontrol product="author editor"
                    >Project</uicontrol><uicontrol product="authorEclipse editorEclipse"
                    >Project Explorer</uicontrol> view</xref>.</li>
              <li id="li_a14_dgk_54b">Right-click the selected files and choose <menucascade>
                  <uicontrol>Transform</uicontrol>
                  <uicontrol><image href="../img/TransformConfig16.png" id="image_o3z_p5v_sr"
                    />Configure Transformation Scenario(s)</uicontrol>
                </menucascade>.</li>
              <li id="li_b14_dgk_54b">Apply the built-in <xref
                  href="docbook-2-dita-transform.dita#docbook-2-dita-transform">transformation
                  scenario called <uicontrol>DocBook to DITA</uicontrol></xref>.</li>
            </ol></li>
          <li id="li_c14_dgk_54b">You may need to make some manual adjustments in the resulting documents for elements
            that couldn't be mapped.</li>
        </ol><note type="tip" id="note_d14_dgk_54b">There is also a utility XSLT stylesheet available on the <b>Oxygen XML
            GitHub</b> account that can be used convert a DITA composite file to a DITA map with
          separate DITA topic files. It can be found here: <xref
            href="https://github.com/oxygenxml/old-userguide-docbookbased/blob/master/split-DITA-topic.xsl"
            format="xsl" scope="external"/>.</note></p>
    </section>
    <section id="section_cdq_wl2_5gb">
      <title>Migrating Google Docs to DITA</title>
      <p id="p_e14_dgk_54b">There are several possibilities to convert Google Docs to DITA:<ul id="ul_e1s_yl2_5gb">
          <li id="li_f14_dgk_54b">Copy the content from Google Docs and paste it in an open DITA topic in
              <uicontrol>Author</uicontrol> mode. The <xref
              href="smart-paste-support.dita#smart-paste-support"><term>Smart Paste</term>
              functionality</xref> will attempt to convert the content to DITA.</li>
          <li id="li_g14_dgk_54b">Save the Google document as OpenDocumentFormat (<b>ODF</b>), then open it in the free
              <i>LibreOffice</i> application and save it as <b>DocBook</b>. Next, open the
              <b>DocBook</b> document in <ph keyref="product"/> and run the built-in <xref
              href="docbook-2-dita-transform.dita#docbook-2-dita-transform">transformation scenario
              called <uicontrol>DocBook to DITA</uicontrol></xref>.</li>
          <li product="author editor" id="li_h14_dgk_54b">If you want to convert multiple Google documents at once, save
            the documents as HTML, then use <xref href="batch-converter-addon.dita"
                ><uicontrol>Oxygen's Batch Documents Converter add-on</uicontrol></xref> to convert
            the documents to <b>DITA</b>.</li>
        </ul></p>
      <p id="p_i14_dgk_54b">In all cases, you may need to make some manual adjustments in the resulting documents for
        elements that couldn't be mapped.</p>
    </section>
    <section id="section_gdg_tv4_4gb" product="author editor">
      <title>Migrating Markdown Content to DITA</title>
      <p id="p_j14_dgk_54b">There are several possibilities to convert Markdown content to DITA:<ul id="ul_k14_dgk_54b">
          <li id="li_l14_dgk_54b">The DITA Open Toolkit publishing engine bundled with <ph keyref="product"/> allows you
            to reference Markdown files directly in a DITA map and either publish them directly or
            export the Markdown files to DITA one by one. For details, see <xref
              href="markdown-dita.dita"/>.</li>
          <li id="li_m14_dgk_54b">If you want to convert multiple Markdown files at once, you can use <xref
              href="batch-converter-addon.dita"><uicontrol>Oxygen's Batch Documents Converter
                add-on</uicontrol></xref> to convert the documents to <b>DITA</b>. </li>
        </ul></p>
    </section>
    <section id="migrating_markdown_eclipse" product="authorEclipse editorEclipse">
      <title>Migrating Markdown Content to DITA</title>
      <p id="p_n14_dgk_54b">The DITA Open Toolkit publishing engine bundled with <ph keyref="product"/> allows you to
        reference Markdown files directly in a DITA map and either publish them directly or export
        the Markdown files to DITA one by one. For details, see <xref href="markdown-dita.dita"
        />.</p>
    </section>
    <section id="section_ss1_gw4_4gb">
      <title>Migrating HTML Content to DITA</title>
      <p id="p_o14_dgk_54b">There are several possibilities to convert HTML content to DITA:</p>
      <ul id="ul_p14_dgk_54b">
        <li id="li_q14_dgk_54b">Copy the HTML content and paste it in an open DITA topic in
            <uicontrol>Author</uicontrol> mode. The <xref
            href="smart-paste-support.dita#smart-paste-support"><term>Smart Paste</term>
            functionality</xref> will attempt to convert the content to DITA.</li>
        <li id="li_r14_dgk_54b">Convert the HTML file to XHTML by selecting <menucascade>
            <uicontrol>File</uicontrol>
            <uicontrol>Import/Convert</uicontrol>
            <uicontrol>HTML File to XHTML</uicontrol>
          </menucascade>. Then, open the XHTML file and use one of the <xref
            href="author-xhtml-doc-type.dita#author-xhtml-doc-type/transformation_scenarios"
              ><uicontrol>XHTML to DITA</uicontrol> Transformation Scenarios</xref> to convert the
          content to DITA.</li>
        <li product="author editor" id="li_s14_dgk_54b">If you want to convert multiple HTML files at once, you can use
            <xref href="batch-converter-addon.dita"><uicontrol>Oxygen's Batch Converter
              add-on</uicontrol></xref> to convert the documents to <b>DITA</b>. </li>
      </ul>
    </section>
    <section id="section_imj_py4_4gb">
      <title>Migrating Unstructured FrameMaker to DITA</title>
      <p id="p_t14_dgk_54b">There is a FrameMaker plugin that can be used for this type of conversion: <xref
          href="https://leximation.com/tools/info/fm2dita.php" format="php" scope="external"/>.</p>
    </section>
    <section id="section_cry_wy4_4gb">
      <title>Migrating MadCap Content to DITA</title>
      <p id="p_u14_dgk_54b">Some recent MadCap versions seem to have facilities to export content directly to DITA.
        Otherwise, you will need to convert XHTML content to DITA with a custom XSLT stylesheet to
        preserve variable references.</p>
    </section>
    <section id="section_zv4_hy4_4gb">
      <title>Migrating Other Formats to DITA</title>
      <p id="p_v14_dgk_54b">You may find third-party applications (such as <xref href="https://pandoc.org/"
          format="html" scope="external">Pandoc</xref>) that can convert your content to HTML or to
        some kind of XML format like DocBook. Once you have HTML or DocBook content, you can convert
        them to DITA using one of the methods described above.</p>
    </section>
    <section id="section_dfv_rct_clb">
      <title>Migrate from DITA to Confluence and Other Formats</title>
      <p id="p_w14_dgk_54b">There are various possible methods available for converting DITA content to Confluence and
        other formats (such as Microsoft Word or HTML). For details and ideas for some of the
        possible methods, see the <xref href="https://blog.oxygenxml.com/dita_to_confluence.html"
          format="html" scope="external"><b>DITA to Confluence</b> blog post</xref>.</p>
    </section>
    <section id="section_x2n_vhh_vrb">
      <title>Resources</title>
      <p id="p_orm_dgk_54b">For more information about migrating to DITA, see our webinar: <xref
          href="https://www.oxygenxml.com/events/2021/webinar_working_with_dita_in_oxygen_migrating_to_dita_and_refactoring.html"
          format="html" scope="external">Working with DITA in Oxygen - Migrating to DITA and
          Refactoring</xref>.</p>
    </section>
  </body>
</topic>
