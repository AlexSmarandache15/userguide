<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_metadata">
  <title>Metadata</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Metadata</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>PDF files may contain metadata. Metadata provide additional information about a certain
      document, such as its title, author, organization, creation date, format, copyright.</p>
    <p>HTML defines the <codeph>meta</codeph> element for keeping track of information that
      describes your content. More or less of this information should migrate to the PDF document
      properties. The property values may be either static, specified directly from the CSS, or
      dynamic, collected from the document using the functions:<ul id="ul_cy3_b2j_wz">
        <li>content(text)</li>
        <li>attr()</li>
        <li>oxy_xpath()</li>
      </ul></p>
    <section id="section_aqz_j2j_wz">
      <title>Predefined Meta Fields</title>
      <p>An example of common metadata:<ul id="ul_plc_sz3_wz">
          <li>Publication title</li>
          <li>Author</li>
          <li>Keywords</li>
          <li>Short description</li>
        </ul><ph keyref="product"/> extracts automatically these informations from HTML documents.
        Now let see how we can extract them from an arbitrary XML document, having this
        structure:</p>
      <codeblock outputclass="language-xml">&lt;doc>
     &lt;title>Publication title&lt;/title>
     &lt;meta name='keywords' content='software, network'>
     &lt;meta name='description' content='This is a publication about software products...'>
     &lt;meta name='author' content='John, jo@mysite.example.com'>
...</codeblock>
      <p>
        <dl>
          <dlentry>
            <dt>-oxy-pdf-meta-title</dt>
            <dd>It is used to extract the publication title. You can use it by matching the
                <codeph>title</codeph>
              element:<codeblock outputclass="language-css" xml:space="preserve">title {
    -oxy-pdf-meta-title: content(text);
}</codeblock></dd>
            <dd>
              <p>If this CSS selector matches multiple elements, only the first element in the
                document order will be used to extract the title.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>-oxy-pdf-meta-author</dt>
            <dd>It is used to extract the publication author. You can use it by matching the
                <codeph>meta</codeph> element with the attribute
              <codeph>name='author'</codeph>:<codeblock outputclass="language-css" xml:space="preserve">meta[name='author'] {
    -oxy-pdf-meta-author: attr(content);
}</codeblock></dd>
            <dd>
              <p>If this CSS selector matches multiple elements, only the first element in the
                document order will be used to extract the author.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>-oxy-pdf-meta-description</dt>
            <dd>It is used to extract the publication description. You can use it by matching the
                <codeph>meta</codeph> element with the attribute
              <codeph>name='description'</codeph>, or
              <codeph>name='description'</codeph>:<codeblock outputclass="language-css" xml:space="preserve">meta[name='description'], 
meta[name='subject'] {
    -oxy-pdf-meta-description: attr(content);
}</codeblock></dd>
            <dd>
              <p>If this CSS selector matches multiple elements, only the first element in the
                document order will be used to extract the description.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>-oxy-pdf-meta-keywords</dt>
            <dd>It is used to extract the publication author. You can use it by matching the
                <codeph>meta</codeph> element with the attribute
              <codeph>name='author'</codeph>:<codeblock outputclass="language-css" xml:space="preserve">meta[name='keywords'] {
    -oxy-pdf-meta-keywords: attr(content);
}</codeblock></dd>
            <dd>
              <p>If this CSS selector matches multiple elements, only the first element in the
                document order will be used to extract the keywords.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>-oxy-pdf-meta-keyword</dt>
            <dd>It is used to extract <b>a single keyword</b>, that is accumulated to the ones
              before it. If you mark in your HTML document the keywors let say with a span with a
              class "kw", for example, you may collect them all by
              using:<codeblock outputclass="language-css" xml:space="preserve">span.kw {
    -oxy-pdf-meta-keyword: content(text);
}</codeblock></dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="section_lxd_42j_wz">
      <title>Custom Meta Fields</title>
      <p>Metadata is not restricted to the above ones, you may have custom metadata fields. It is
        usually displayed in a tabular format in Acrobat Reader â„¢ <uicontrol>Properties</uicontrol>
        dialog, the <uicontrol>Custom</uicontrol> tab. </p>
      <p>
        <dl>
          <dlentry>
            <dt>-oxy-pdf-meta-custom</dt>
            <dd>This property has two parts, one defining the name, and one the value for the field. </dd>
            <dd>In the following example, we dump all the meta tags as custom meta fields in
              PDF:<codeblock outputclass="language-css">meta {
    -oxy-pdf-meta-custom: attr(name) attr(content);
}</codeblock></dd>
            <dd>Or, in case you have somewhere in the document content a span that defines the
              document creation date, you may use:</dd>
            <dd>
              <codeblock outputclass="language-css">span.created {
    -oxy-pdf-meta-custom: "CreationDate" content(text);
} </codeblock>
            </dd>
            <dd>
              <p>In case of conflicts, when two or more elements trigger setting of a meta field
                with the same name, only the first definition of a meta field will be used in the
                PDF output.</p>
            </dd>
          </dlentry>
        </dl>
      </p>
    </section>
  </body>
</topic>
