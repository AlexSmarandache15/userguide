<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="insert-reference-from-webdav-repository">
    <title>Adding Support to Insert References from a WebDAV Connection </title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Oxygen XML Author Component<indexterm>Web deployment<indexterm>Insert references
              from a WebDAV connection</indexterm></indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
    <taskbody>
        <context>
            <p>Predefined actions that insert references, such as the <uicontrol>Insert
          Image</uicontrol> action, display a URL chooser that allows you to select the
          <uicontrol>Browse Data Source Explorer</uicontrol> action. To use an already configured
              WebDAV connection in the <ph keyref="authorComponent"/>, follow these steps:</p>
        </context>
        <steps>
            <step>
        <cmd>Open a standalone <ph keyref="product"/>
          <ph keyref="minorVersion"/> and configure a WebDAV connection.</cmd>
      </step>
      <step>
        <cmd>Pack the <xref href="../topics/author_component_pack_options.dita">fixed set of
          options</xref> from the standalone to use them with the <ph keyref="authorComponent"/>
          project.</cmd>
      </step>
      <step>
        <cmd>In the <ph keyref="authorComponent"/>, the defined connection still does not work when
          expanded because the additional <term>JAR</term> libraries used to browse the WebDAV
          repository are missing. By default, the <term>httpclient</term> dependency of the
            <i>Oxygen SDK</i> artifact is excluded. You can enable it by commenting the following
          lines:</cmd>
        <info><codeblock outputclass="language-xml">&lt;exclusion>
    &lt;artifactId>httpclient&lt;/artifactId>
    &lt;groupId>org.apache.httpcomponents&lt;/groupId>
&lt;/exclusion> </codeblock>If
          you want to have multiple WebDAV connection URLs, user names, and passwords (depending on
          the user who started the component), you can use a more flexible approach by using the
          following
          API:<codeblock outputclass="language-java">    //DBConnectionInfo(String id, String driverName, String url, String user, 
String passwd, String host, String port) 
    DBConnectionInfo info = new DBConnectionInfo("WEBDAV", "WebDAV FTP", 
"http://host/webdav-user-root", "userName", "password", null, null);
    AuthorComponentFactory.getInstance().setObjectProperty
("database.stored.sessions1", new DBConnectionInfo[] {info}); </codeblock></info>
      </step>
        </steps>
    </taskbody>
</task>
