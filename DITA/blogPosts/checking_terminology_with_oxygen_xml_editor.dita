<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="checking_terminology_with_oxygen_xml_editor">
    <title>Checking terminology with Oxygen XML Editor</title>
    <body>
        <section>In this blog post I will offer a general overview about the current possibilities
      you have available to impose your own language checking rules when working with Oxygen XML
      Editor.</section>
        <section id="section_ps4_mrb_g1b">
            <title>Built-in support</title>
            <p>Oxygen comes bundled with the popular <xref href="http://hunspell.github.io/"
          format="html" scope="external">Hunspell</xref> spell checker and along with the regular
        bundled dictionaries for English, German, Spanish, and French, it allows you to install new
        dictionaries, either for other languages or custom dictionaries (for example, dictionaries
        for medical terms) that you can build separately: <xref
          href="https://www.oxygenxml.com/doc/versions/19.0/ug-editor/topics/spell-dictionary-Hunspell.html"
          format="html" scope="external"/>.</p>
            <p>Besides the spell checker, Oxygen also has support for <xref
                    href="https://www.oxygenxml.com/doc/versions/19.0/ug-editor/topics/autocorrect.html"
                    format="html" scope="external">Auto-correct</xref> and you can add your own
                Auto-correct pairs to Oxygen.</p>
        </section>
        <section id="section_ild_5rb_g1b">
            <title>Commercial alternatives</title>
            <p><xref href="https://support.acrolinx.com/hc/en-us" format="html" scope="external"
          >Acrolinx</xref> is a very popular commercial tool for checking content for consistency
        and terminology. The plugins that Acrolinx developed for Oxygen standalone, Oxygen Eclipse
        plugin and Oxygen Web Author allow you to run the Acrolinx checker directly from inside the
        application.</p>
            <p><xref href="https://www.simplifiedenglish.net/hyperste/" format="html"
          scope="external">HyperSTE</xref> is another popular commercial tool for checking content
        and terminology. They also have a plugin for Oxygen standalone.</p>
        </section>
        <section id="section_h1h_msb_g1b">
            <title>Open-source alternatives</title>
            <p><xref href="https://www.languagetool.org/" format="html" scope="external"
          >LanguageTools</xref> is an open-source proofÂ­reading program for English, French, German,
        Polish, and more than 20 other languages . There is an open-source plugin for Oxygen
        available on <xref href="https://github.com/danielnaber/oxygen-languagetool-plugin"
          format="html" scope="external">GitHub</xref>.</p>
            <p>The DITA Open Toolkit terminology checker plugin from <xref
          href="https://github.com/doctales/org.doctales.terminology" format="html" scope="external"
          >Doctales</xref> contains Schematron rules to check that various words adhere to the
        terminology dictionaries that are custom built using DITA.</p>
        </section>
        <section id="section_v55_hvb_g1b">
            <title>Building your own terminology checker</title>
            <p>The fastest and simplest way to build a simple terminology checker is by using
        Schematron rules. The <xref href="https://github.com/doctales/org.doctales.terminology"
          format="html" scope="external">Doctales</xref> plugin is a good example for this. </p>
            <p>At some point, as the terminology dictionary keeps growing, you may encounter delays
        and slow downs when editing the documents and validating it using the custom Schematron
        rules. So an alternative to this is by using our <xref
          href="https://www.oxygenxml.com/oxygen_sdk.html" format="html" scope="external">Author
          SDK</xref> to build your own Oxygen plugin, which can use our API to check the content and
        then add highlights. The <xref href="https://www.languagetool.org/" format="html"
          scope="external">LanguageTools</xref> open-source plugin may be a good starting example
        for this.</p>
        </section>
    </body>
</topic>
